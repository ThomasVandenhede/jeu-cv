{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/game/ennemy.js","webpack:///./js/game/laser.js","webpack:///./js/game/levelManager.js","webpack:///./js/game/movingPlatform.js","webpack:///./js/game/particleEmitters.js","webpack:///./js/game/platform.js","webpack:///./js/game/player.js","webpack:///./js/game/shield.js","webpack:///./js/game/skill.js","webpack:///./js/game/skills.js","webpack:///./js/game/smokeParticle.js","webpack:///./js/levelEditor.js","webpack:///./js/levelEditor/creationTool.js","webpack:///./js/levelEditor/gameLevelEditor.js","webpack:///./js/levelEditor/keyboardManager.js","webpack:///./js/levelEditor/selectionTool.js","webpack:///./js/levelEditor/toolManager.js","webpack:///./js/levelEditor/toolbar.js","webpack:///./js/utils.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,YAAY,mBAAO,CAAC,mCAAS;;AAE7B;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACtDA,aAAa,mBAAO,CAAC,qCAAU;AAC/B,aAAa,mBAAO,CAAC,qCAAU;AAC/B,aAAa,mBAAO,CAAC,qCAAU;AAC/B,eAAe,mBAAO,CAAC,yCAAY;AACnC,qBAAqB,mBAAO,CAAC,qDAAkB;AAC/C,aAAa,mBAAO,CAAC,qCAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACjHA,eAAe,mBAAO,CAAC,yCAAY;AACnC,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC1EA,oBAAoB,mBAAO,CAAC,mDAAiB;AAC7C,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnPA;AACA;;AAEA;AACA;;AAEA;AACA,yEAAyE;AACzE;AACA,2EAA2E;AAC3E,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACrDA,aAAa,mBAAO,CAAC,qCAAU;AAC/B,uBAAuB,mBAAO,CAAC,yDAAoB;AACnD,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA,4BAA4B;AAC5B,2BAA2B;AAC3B,oCAAoC;AACpC,4BAA4B,iBAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3NA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,0CAA0C;AACnE,yBAAyB,2CAA2C;AACpE,yBAAyB,8CAA8C;AACvE,yBAAyB,6CAA6C;AACtE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC3KA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC9BA,YAAY,mBAAO,CAAC,mCAAS;;AAE7B;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/IA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;AC7BA,kBAAkB,mBAAO,CAAC,0EAA+B;;AAEzD;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;AC1BD;AACA;AACA,cAAc;AACd,cAAc;AACd,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AChHA,mBAAmB,mBAAO,CAAC,wDAAgB;AAC3C,oBAAoB,mBAAO,CAAC,0DAAiB;AAC7C,sBAAsB,mBAAO,CAAC,8DAAmB;AACjD,mBAAmB,mBAAO,CAAC,uDAAsB;AACjD,cAAc,mBAAO,CAAC,8CAAW;AACjC,kBAAkB,mBAAO,CAAC,sDAAe;AACzC,YAAY,mBAAO,CAAC,+BAAU;AAC9B,kBAAkB,mBAAO,CAAC,sDAAuB;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,gCAAgC,+BAA+B;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,YAAY;AAChE;AACA,kCAAkC,wBAAwB;AAC1D,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACxbA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC/GA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,gDAAgD;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C,WAAW;;AAEX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACxSA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzCA,aAAa,mBAAO,CAAC,2CAAgB;AACrC,aAAa,mBAAO,CAAC,2CAAgB;AACrC,eAAe,mBAAO,CAAC,+CAAkB;AACzC,qBAAqB,mBAAO,CAAC,2DAAwB;AACrD,aAAa,mBAAO,CAAC,2CAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC/KA;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB;;AAErB;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA","file":"level-editor.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/levelEditor.js\");\n","var Laser = require(\"./laser\");\n\nvar Ennemy = (function() {\n  function Ennemy(x, y) {\n    SDK.Circle.call(this, x, y, 10);\n\n    this.v = new SDK.Vector();\n    this.solid = false;\n    this.damage = 5; // damage the ennemy's attack inflicts\n    this.fireDelay = 500; // number of ms between two ennemy attacks\n    this.visionRange = 300;\n    this.attackRange = 500;\n    this.lasers = [];\n    this.lastFiredAt = Number.NEGATIVE_INFINITY;\n  }\n\n  Ennemy.prototype = Object.create(SDK.Circle.prototype);\n  Ennemy.prototype.constructor = Ennemy;\n\n  Ennemy.prototype.attack = function(direction) {\n    var center = this.center;\n    this.lastFiredAt = Date.now();\n    return new Laser({\n      x: center.x,\n      y: center.y,\n      direction: direction,\n      damage: this.damage,\n      range: this.attackRange,\n      color: \"lightgrey\"\n    });\n  };\n\n  Ennemy.prototype.update = function() {};\n\n  Ennemy.prototype.updateVelocity = function() {};\n\n  Ennemy.prototype.draw = function(ctx, camera) {\n    ctx.save();\n    ctx.fillStyle = \"red\";\n    ctx.beginPath();\n    ctx.arc(\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.r),\n      0,\n      Math.PI * 2\n    );\n    ctx.fill();\n    ctx.restore();\n  };\n\n  return Ennemy;\n})();\n\nmodule.exports = Ennemy;\n","var Laser = (function() {\n  function Laser(props) {\n    this.length = 20;\n    var A = new SDK.Vector(props.x, props.y);\n    var B = SDK.Vector.sum(A, props.direction.scale(this.length));\n    SDK.Segment.call(this, A, B);\n\n    this.origin = new SDK.Vector(props.x, props.y);\n    this.speed = 250;\n    this.v = SDK.Vector.subtract(B, A)\n      .getUnitVector()\n      .scale(this.speed);\n\n    // stats\n    this.damage = props.damage;\n\n    // timings\n    this.createdAt = Date.now();\n    this.range = props.range;\n\n    this.color = props.color;\n  }\n\n  Laser.prototype = Object.create(SDK.Segment.prototype);\n  Laser.prototype.constructor = Laser;\n\n  Laser.prototype.hasReachedMaxRange = function() {\n    return (\n      SDK.Vector.subtract(this.B, this.origin).normSquared >=\n      Math.pow(this.range, 2)\n    );\n  };\n\n  Laser.prototype.update = function() {\n    var dPos = this.v.scale(dt);\n    this.A = SDK.Vector.sum(this.A, dPos);\n    this.B = SDK.Vector.sum(this.B, dPos);\n  };\n\n  Laser.prototype.draw = function(ctx, camera) {\n    var lineWidth = 3;\n    ctx.save();\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(this.A.x), camera.applyToY(this.A.y));\n    ctx.lineTo(camera.applyToX(this.B.x), camera.applyToY(this.B.y));\n    ctx.stroke();\n    ctx.restore();\n  };\n\n  return Laser;\n})();\n\nmodule.exports = Laser;\n","var Player = require(\"./player\");\nvar Player = require(\"./player\");\nvar Ennemy = require(\"./ennemy\");\nvar Platform = require(\"./platform\");\nvar MovingPlatform = require(\"./movingPlatform\");\nvar skills = require(\"./skills\");\nvar SkillHtml = skills.SkillHtml;\nvar SkillCss = skills.SkillCss;\nvar SkillSass = skills.SkillSass;\nvar SkillBootstrap = skills.SkillBootstrap;\nvar SkillReact = skills.SkillReact;\nvar SkillAngular = skills.SkillAngular;\nvar SkillJquery = skills.SkillJquery;\nvar SkillNode = skills.SkillNode;\nvar SkillMongo = skills.SkillMongo;\nvar SkillMeteor = skills.SkillMeteor;\n\nvar LevelManager = (function() {\n  var level = {};\n\n  var gameEntityConstructors = {\n    Player: Player,\n    Ennemy: Ennemy,\n    Platform: Platform,\n    MovingPlatform: MovingPlatform,\n    SkillHtml: SkillHtml,\n    SkillCss: SkillCss,\n    SkillSass: SkillSass,\n    SkillBootstrap: SkillBootstrap,\n    SkillReact: SkillReact,\n    SkillAngular: SkillAngular,\n    SkillJquery: SkillJquery,\n    SkillNode: SkillNode,\n    SkillMongo: SkillMongo,\n    SkillMeteor: SkillMeteor\n  };\n\n  function LevelManager(props) {\n    this.data = props.data;\n    this.app = props.app;\n  }\n\n  LevelManager.prototype.buildLevel = function(name) {\n    if (!gameData.levels[name]) {\n      return null;\n    }\n    var levelData = gameData.levels[name];\n    var name = levelData.name;\n    var worldRectData = levelData.worldRect;\n    var playerData = levelData.player;\n    var platformsData = levelData.platforms;\n    var ennemiesData = levelData.ennemies;\n    var skillsData = levelData.skills;\n\n    level.name = name;\n    level.countdownStart = levelData.countdownStart;\n    level.worldRect = new SDK.Rectangle({\n      x: worldRectData.props.x,\n      y: worldRectData.props.y,\n      width: worldRectData.props.width,\n      height: worldRectData.props.height\n    });\n    level.player = new gameEntityConstructors[playerData.type](\n      playerData.props\n    );\n    level.platforms = [];\n    platformsData.forEach(function(platform) {\n      level.platforms.push(\n        new gameEntityConstructors[platform.type](platform.props)\n      );\n    });\n    level.ennemies = [];\n    ennemiesData.forEach(function(ennemy) {\n      level.ennemies.push(\n        new gameEntityConstructors[ennemy.type](ennemy.props.x, ennemy.props.y)\n      );\n    });\n    level.skills = [];\n    skillsData.forEach(function(skill) {\n      level.skills.push(new gameEntityConstructors[skill.type](skill.props));\n    });\n\n    // temporary objects\n    level.lasers = [];\n    level.particles = [];\n\n    return level;\n  };\n\n  /**\n   * Put all level entities inside a single array.\n   * @param {Array} extra\n   */\n  LevelManager.prototype.buildEntities = function(extra) {\n    level.entities = []\n      .concat(level.platforms)\n      .concat(level.skills)\n      .concat(level.ennemies)\n      .concat(level.lasers)\n      .concat([level.player]);\n\n    if (extra) {\n      level.entities = level.entities.concat(extra);\n    }\n  };\n\n  LevelManager.prototype.deleteLevel = function(name) {\n    delete gameData.levels[name];\n  };\n\n  return LevelManager;\n})();\n\nmodule.exports = LevelManager;\n","var Platform = require(\"./platform\");\nvar utils = require('../utils');\n\nvar MovingPlatform = (function() {\n  function MovingPlatform(props) {\n    Platform.call(this, props);\n\n    this.xStart = props.x !== undefined ? props.x : 0;\n    this.yStart = props.x !== undefined ? props.y : 0;\n    this.xEnd = props.xEnd !== undefined ? props.xEnd : this.xStart;\n    this.yEnd = props.yEnd !== undefined ? props.yEnd : this.yStart;\n\n    this.speed = props.speed || 50;\n    this.v = new SDK.Vector(this.xEnd - this.x, this.yEnd - this.y);\n    var vNorm = this.v.norm;\n    this.v = this.v.scale(this.speed / vNorm);\n\n    this.color = \"rgb(0, 100, 255)\";\n    this.color = \"darkorange\";\n  }\n\n  MovingPlatform.prototype = Object.create(Platform.prototype);\n  MovingPlatform.prototype.constructor = MovingPlatform;\n\n  MovingPlatform.prototype.updateVelocity = function() {\n    // // horizontal velocity\n    // if (\n    //   this.v.x > 0 &&\n    //   ((this.xEnd - this.xStart) * (this.xEnd - this.x) < 0 ||\n    //     (this.xEnd - this.xStart) * (this.x - this.xStart) < 0)\n    // ) {\n    //   this.v.x = -Math.abs(this.v.x);\n    // } else if (\n    //   this.v.x < 0 &&\n    //   ((this.xEnd - this.xStart) * (this.xEnd - this.x) < 0 ||\n    //     (this.xEnd - this.xStart) * (this.x - this.xStart) < 0)\n    // ) {\n    //   this.v.x = Math.abs(this.v.x);\n    // }\n    // // vertical velocity\n    // if (\n    //   this.v.y > 0 &&\n    //   ((this.yEnd - this.yStart) * (this.yEnd - this.y) < 0 ||\n    //     (this.yEnd - this.yStart) * (this.y - this.yStart) < 0)\n    // ) {\n    //   this.v.y = -Math.abs(this.v.y);\n    // } else if (\n    //   this.v.y < 0 &&\n    //   ((this.yEnd - this.yStart) * (this.yEnd - this.y) < 0 ||\n    //     (this.yEnd - this.yStart) * (this.y - this.yStart) < 0)\n    // ) {\n    //   this.v.y = Math.abs(this.v.y);\n    // }\n  };\n\n  MovingPlatform.prototype.update = function() {\n    var dx = this.v.x * dt;\n    var dy = this.v.y * dt;\n    if (this.x + dx > this.xEnd || this.y + dy > this.yEnd) {\n      this.v.x = -Math.abs(this.v.x);\n      this.v.y = -Math.abs(this.v.y);\n    }\n    if (this.x + dx < this.xStart || this.y + dy < this.yStart) {\n      this.v.x = Math.abs(this.v.x);\n      this.v.y = Math.abs(this.v.y);\n    }\n\n    this.x = utils.toFixedPrecision(this.x + dx, 2);\n    this.y = utils.toFixedPrecision(this.y + dy, 2);\n  };\n\n  return MovingPlatform;\n})();\n\nmodule.exports = MovingPlatform;\n","var SmokeParticle = require(\"./smokeParticle\");\nvar utils = require('../utils');\n\nvar sparksParticles = function(gameObj) {\n  var start = Date.now();\n\n  return {\n    particleIndex: 0,\n    particles: {},\n    minSpeed: 5,\n    maxSpeed: 20,\n    size: 10,\n    maxLife: 2000,\n    duration: 200,\n    addNewParticle: function() {\n      this.particleIndex++;\n      var color = !gameObj.hasWon\n        ? gameObj.color\n        : \"rgb(\" +\n          utils.randInt(0, 255) +\n          \", \" +\n          utils.randInt(0, 255) +\n          \", \" +\n          utils.randInt(0, 255) +\n          \")\";\n      switch (utils.randInt(0, 3)) {\n        case 0:\n          // top edge\n          particle = new SmokeParticle({\n            x: utils.randInt(gameObj.left, gameObj.right),\n            y: gameObj.top - this.size,\n            size: this.size,\n            color: color,\n            vx: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            vy: utils.randInt(-this.maxSpeed, -this.minSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n        case 1:\n          // bottom edge\n          particle = new SmokeParticle({\n            x: utils.randInt(gameObj.left, gameObj.right),\n            y: gameObj.bottom,\n            size: this.size,\n            color: color,\n            vx: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            vy: utils.randInt(this.minSpeed, this.maxSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n        case 2:\n          // left edge\n          particle = new SmokeParticle({\n            x: gameObj.left - this.size,\n            y: utils.randInt(gameObj.top, gameObj.bottom),\n            size: this.size,\n            color: color,\n            vx: utils.randInt(-this.maxSpeed, -this.minSpeed),\n            vy: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n        case 3:\n          // right edge\n          particle = new SmokeParticle({\n            x: gameObj.right,\n            y: utils.randInt(gameObj.top, gameObj.bottom),\n            size: this.size,\n            color: color,\n            vx: utils.randInt(this.minSpeed, this.maxSpeed),\n            vy: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n      }\n    },\n    update: function() {\n      // only add particles for a certain duration\n      if (Date.now() <= start + this.duration) {\n        for (var i = 0; i < 2; i++) {\n          this.addNewParticle();\n        }\n      }\n\n      for (var id in this.particles) {\n        var particle = this.particles[id];\n        particle.update();\n        if (Date.now() - particle.createdAt >= this.maxLife) {\n          delete this.particles[id];\n        }\n      }\n    },\n    draw: function(ctx, camera) {\n      ctx.save();\n      for (var id in this.particles) {\n        var particle = this.particles[id];\n        particle.draw(ctx, camera);\n      }\n      ctx.restore();\n    }\n  };\n};\n\nvar explosionParticles = function(gameObj) {\n  var size = 5;\n  var minLife = 500;\n  var maxLife = 1500;\n  var particles = [];\n  var minSpeed = 10;\n  var maxSpeed = 50;\n  var particleIndex = 0;\n  for (var i = gameObj.left; i < gameObj.right; i += size) {\n    for (var j = gameObj.top; j < gameObj.bottom; j += size) {\n      var center = gameObj.center;\n      var v = new SDK.Vector(\n        utils.randInt(-maxSpeed * 5, maxSpeed * 5),\n        utils.randInt(\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * maxSpeed * 10,\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * minSpeed * 10\n        )\n      );\n      var particle = new SDK.Particle({\n        x: i,\n        y: j,\n        size: size,\n        color: gameObj.color,\n        vx: v.x,\n        vy: v.y,\n        maxLife: utils.randInt(minLife, maxLife)\n      });\n      particles[particleIndex] = particle;\n      particleIndex++;\n      var v = new SDK.Vector(\n        utils.randInt(-maxSpeed * 5, maxSpeed * 5),\n        utils.randInt(\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * maxSpeed * 10,\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * minSpeed * 10\n        )\n      );\n      var particle = new SDK.Particle({\n        x: i,\n        y: j,\n        size: size,\n        color: gameObj.color,\n        vx: v.x,\n        vy: v.y,\n        maxLife: utils.randInt(minLife, maxLife)\n      });\n      particles[particleIndex] = particle;\n      particleIndex++;\n    }\n  }\n  return {\n    update: function() {\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.v.y += (gameObj.GRAVITY_ACCELERATION / 4) * dt;\n        particle.update();\n        if (Date.now() - particle.createdAt >= particle.maxLife) {\n          delete particles[id];\n        }\n      }\n    },\n    draw: function(ctx, camera) {\n      ctx.save();\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.draw(ctx, camera);\n      }\n      ctx.restore();\n    }\n  };\n};\n\nvar hitParticles = function(x, y, direction, color) {\n  var createdAt = Date.now();\n  var particleIndex = 0;\n  var maxCount = 10;\n  var size = 4;\n  var minLife = 300;\n  var maxLife = 500;\n  var minSpeed = 10;\n  var maxSpeed = 200;\n  var particles = {};\n  for (var i = 0; i < maxCount; i++) {\n    var v = direction\n      .getUnitVector()\n      .scale(utils.randInt(minSpeed, maxSpeed))\n      .rotateRadians((Math.random() * Math.PI) / 3 - Math.PI / 6);\n    var particle = new SDK.Particle({\n      x: x,\n      y: y,\n      size: size,\n      color: color,\n      vx: v.x,\n      vy: v.y,\n      maxLife: utils.randInt(minLife, maxLife)\n    });\n    particleIndex++;\n    particles[particleIndex] = particle;\n  }\n  return {\n    createdAt: createdAt,\n    particleIndex: particleIndex,\n    maxCount: maxCount,\n    size: size,\n    minLife: minLife,\n    maxLife: maxLife,\n    minSpeed: minSpeed,\n    maxSpeed: maxSpeed,\n    particles: particles,\n    update: function() {\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.update();\n        if (Date.now() - particle.createdAt >= particle.maxLife) {\n          delete particles[id];\n        }\n      }\n    },\n    draw: function(ctx, camera) {\n      ctx.save();\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.draw(ctx, camera);\n      }\n      ctx.restore();\n    }\n  };\n};\n\nmodule.exports = {\n  sparksParticles: sparksParticles,\n  explosionParticles: explosionParticles,\n  hitParticles: hitParticles\n};\n","var Platform = (function() {\n  var MAX_SPEED = 100;\n\n  function Platform(props) {\n    SDK.Rectangle.call(this, props);\n\n    this.v = new SDK.Vector();\n    this.solid = props && props.solid !== undefined ? props.solid : true; // can collide with other solid objects\n    this.passthrough =\n      props && props.passthrough !== undefined ? props.passthrough : false; // can it be traversed upwards\n    this.touched = false; // is the player touching the platform\n    this.color = \"#5e4c4c\";\n  }\n\n  Platform.prototype = Object.create(SDK.Rectangle.prototype);\n  Platform.prototype.constructor = Platform;\n\n  Platform.prototype.update = function() {};\n\n  Platform.prototype.draw = function(ctx, camera) {\n    var lineWidth = 3;\n    ctx.save();\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    if (this.touched || !this.passthrough) {\n      ctx.strokeStyle = \"#db0000\";\n      ctx.fillStyle = this.color;\n      ctx.beginPath();\n      ctx.rect(\n        camera.applyToX(this.x + lineWidth / 2),\n        camera.applyToY(this.y + lineWidth / 2),\n        camera.applyToDistance(this.width - lineWidth),\n        camera.applyToDistance(this.height - lineWidth)\n      );\n      ctx.fill();\n      ctx.stroke();\n    } else {\n      lineWidth = 3;\n      ctx.strokeStyle = this.color;\n      ctx.lineWidth = camera.applyToDistance(lineWidth);\n      ctx.beginPath();\n      ctx.strokeRect(\n        camera.applyToX(this.x + lineWidth / 2),\n        camera.applyToY(this.y + lineWidth / 2),\n        camera.applyToDistance(this.width - lineWidth),\n        camera.applyToDistance(this.height - lineWidth)\n      );\n    }\n    ctx.restore();\n  };\n\n  return Platform;\n})();\n\nmodule.exports = Platform;\n","var Shield = require(\"./shield\");\nvar particleEmitters = require(\"./particleEmitters\");\nvar utils = require(\"../utils\");\n\nvar ABS_JUMP_SPEED = 700;\nvar MAX_FALL_SPEED = 1000;\nvar INITIAL_WIDTH = 30;\nvar INITIAL_HEIGHT = 30;\n\nfunction Player(props) {\n  SDK.Rectangle.call(this, {\n    x: props.x,\n    y: props.y,\n    width: INITIAL_WIDTH,\n    height: INITIAL_HEIGHT\n  });\n\n  this.v = new SDK.Vector();\n  this.acceleration = new SDK.Vector();\n  this.solid = true; // can collide with other solid objects\n  this.maxHitPoints = 100;\n  this.hitPoints = this.maxHitPoints;\n  this.skills = []; // the player must harvest these\n  this.color = this.getColorFromHP();\n\n  // collision direction for movement\n  this.isColliding = [0, 0]; // [horizontal, vertical]\n  this.collidableWith = []; // potential object collisions\n  this.collidingWith = [null, null]; // actual object collisions\n  this.shield = new Shield({ shielded: this });\n\n  // sounds\n  this.sounds = {\n    jump: [\n      // new SDK.Sound(\"./assets/sounds/Swoosh1.mp3\", 0.25),\n      new SDK.Sound(\"./assets/sounds/Swoosh2.mp3\", 0.1),\n      new SDK.Sound(\"./assets/sounds/Swoosh3.mp3\", 0.3)\n    ],\n    hit: [\n      new SDK.Sound(\"./assets/sounds/Hit 1.mp4\", 0.2),\n      new SDK.Sound(\"./assets/sounds/Hit 2.mp4\", 0.2)\n    ],\n    still: new SDK.Sound(\"./assets/sounds/Medium hum.mp4\", 0.15),\n    die: new SDK.Sound(\"./assets/sounds/impactsplat03.mp3\", 0.8),\n    hurt: new SDK.Sound(\"./assets/sounds/Knife Stab.mp3\", 0.2)\n  };\n\n  // should the player get stuck to the ceiling when jumping?\n  this.stickyJump = false;\n\n  // player's own gravity\n  this.GRAVITY_ACCELERATION = gameData.constants.GRAVITY_ACCELERATION;\n}\n\nPlayer.prototype = Object.create(SDK.Rectangle.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.moveLeft = function() {\n  this.v.x = -250;\n};\n\nPlayer.prototype.moveRight = function() {\n  this.v.x = 250;\n};\n\nPlayer.prototype.jump = function() {\n  if (this.isColliding[1] === Math.sign(this.GRAVITY_ACCELERATION)) {\n    // emit particles\n    this.sparks = particleEmitters.sparksParticles(this);\n\n    this.sounds.jump[utils.randInt(0, this.sounds.jump.length - 1)].replay();\n    this.isColliding[1] = 0;\n    this.v.y = -Math.sign(this.GRAVITY_ACCELERATION) * ABS_JUMP_SPEED;\n  }\n};\n\nPlayer.prototype.reverseGravity = function() {\n  this.GRAVITY_ACCELERATION = -this.GRAVITY_ACCELERATION;\n};\n\nPlayer.prototype.zeroGravity = function() {\n  if (this.GRAVITY_ACCELERATION) {\n    this.GRAVITY_ACCELERATION = 0;\n  } else {\n    this.GRAVITY_ACCELERATION = gameData.constants.GRAVITY_ACCELERATION;\n  }\n};\n\nPlayer.prototype.applyDamage = function(damage) {\n  this.sounds.hurt.replay();\n  this.hitPoints = utils.toFixedPrecision(this.hitPoints - damage);\n};\n\nPlayer.prototype.die = function(cb) {\n  this.isDead = true;\n  this.hitPoints = 0;\n  this.color = this.getColorFromHP();\n  this.sounds.still.stop();\n  this.sounds.die.play();\n  this.explosion = particleEmitters.explosionParticles(this);\n  cb && cb();\n};\n\nPlayer.prototype.applyGravity = function() {\n  // apply gravity if player is free falling\n  this.acceleration.y = this.GRAVITY_ACCELERATION;\n\n  // compute new speed based on acceleration and time ellapsed\n  this.v.y += this.acceleration.y * dt;\n  this.v.y =\n    Math.abs(this.v.y) > MAX_FALL_SPEED\n      ? Math.sign(this.v.y) * MAX_FALL_SPEED\n      : this.v.y;\n};\n\nPlayer.prototype.update = function() {\n  if (this.isDead) {\n    this.explosion.update();\n    return;\n  } else {\n    this.sparks && this.sparks.update();\n  }\n\n  var dx = this.v.x * dt,\n    dy = this.v.y * dt;\n\n  // apply natural position increments if no collision detected\n  if (!this.isColliding[1]) {\n    this.y = utils.toFixedPrecision(this.y + dy, 4);\n  }\n  if (!this.isColliding[0]) {\n    this.x = utils.toFixedPrecision(this.x + dx, 4);\n  }\n};\n\nPlayer.prototype.getHitPointsRatio = function() {\n  return this.hitPoints / this.maxHitPoints;\n};\n\nPlayer.prototype.getColorFromHP = function() {\n  var hitPointsRatio = this.getHitPointsRatio();\n  var color = \"hsl(\" + hitPointsRatio * 120 + \", 100%, 50%)\";\n  return color;\n};\n\nPlayer.prototype.draw = function(ctx, camera) {\n  // draw particles\n  this.color = this.getColorFromHP();\n  this.isDead && this.explosion.draw(ctx, camera);\n  !this.isDead && this.sparks && this.sparks.draw(ctx, camera);\n\n  // draw player\n  if (!this.isDead) {\n    var center = this.center;\n    var lineWidth = 5;\n\n    ctx.save();\n    ctx.strokeStyle = this.color;\n    ctx.fillStyle = this.color;\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    ctx.fillRect(\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.width),\n      camera.applyToDistance(this.height)\n    );\n\n    // draw mask\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(\n      camera.applyToX(this.left),\n      camera.applyToY(this.top + 10),\n      camera.applyToDistance(this.width),\n      camera.applyToDistance(10)\n    );\n\n    // draw eyes\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(center.x - 10), camera.applyToY(this.top + 12));\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x - 4),\n      camera.applyToY(this.top + 14),\n      camera.applyToX(center.x - 4),\n      camera.applyToY(this.top + 16)\n    );\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x - 10),\n      camera.applyToY(this.top + 16),\n      camera.applyToX(center.x - 10),\n      camera.applyToY(this.top + 14)\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(center.x + 10), camera.applyToY(this.top + 12));\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x + 4),\n      camera.applyToY(this.top + 14),\n      camera.applyToX(center.x + 4),\n      camera.applyToY(this.top + 16)\n    );\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x + 10),\n      camera.applyToY(this.top + 16),\n      camera.applyToX(center.x + 10),\n      camera.applyToY(this.top + 14)\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n\n    // draw shield\n    if (this.shield.isOpen || this.shield.isAnimating) {\n      this.shield.draw(ctx, camera);\n    }\n  }\n};\n\nmodule.exports = Player;\n","var Shield = (function() {\n  var MIN_SIZE = 0;\n  var MAX_SIZE = 40;\n\n  function Shield(props) {\n    this.shielded = props.shielded || null; // object benefitting from the shield\n    this.r = MIN_SIZE;\n    this.isOpen = false;\n    this.isAnimating = false;\n\n    // timings\n    this.openingDuration = 0.3;\n    this.closingDuration = 0.6;\n\n    // hit points\n    this.hitPoints = 200;\n\n    // sounds\n    this.sounds = {\n      open: new SDK.Sound(\"./assets/sounds/Open.mp3\", 0.1),\n      close: new SDK.Sound(\"./assets/sounds/Close.mp3\", 0.2)\n    };\n  }\n\n  Shield.prototype.getBoundingRect = function() {\n    var shielded = this.shielded;\n    return new SDK.Rectangle({\n      x: shielded.left - this.r,\n      y: shielded.top - this.r,\n      width: shielded.width + this.r * 2,\n      height: shielded.height + this.r * 2\n    });\n  };\n\n  Shield.prototype.open = function() {\n    this.sounds.close.stop();\n    this.sounds.open.play();\n    this.isOpen = true;\n    this.isAnimating = true;\n  };\n\n  Shield.prototype.close = function() {\n    this.sounds.open.stop();\n    this.sounds.close.play();\n    this.isOpen = false;\n    this.isAnimating = true;\n  };\n\n  Shield.prototype.update = function() {\n    var dr;\n    if (this.isOpen) {\n      dr = ((MAX_SIZE - MIN_SIZE) / this.openingDuration) * dt;\n      // shield opening\n      if (this.r + dr < MAX_SIZE) {\n        this.r += dr;\n      } else {\n        this.r = MAX_SIZE;\n        this.isAnimating = false;\n      }\n    } else {\n      dr = ((MAX_SIZE - MIN_SIZE) / this.closingDuration) * dt;\n      // shield closing\n      if (this.r - dr > MIN_SIZE) {\n        this.r -= dr;\n      } else {\n        this.r = MIN_SIZE;\n        this.isAnimating = false;\n      }\n    }\n  };\n\n  Shield.prototype.hasCollisionWithLaser = function(laser) {\n    var boundingRect = this.getBoundingRect();\n    var collision = SDK.physics.collision;\n    var shielded = this.shielded;\n    var r = this.r;\n\n    // return if the two shapes bounding rectangles don't collide\n    if (\n      !collision.RectangleWithRectangle(boundingRect, laser.getBoundingRect())\n    ) {\n      return false;\n    }\n\n    // the shield can be decomposed in 6 shapes\n    c1 = new SDK.Circle({ x: shielded.left, y: shielded.top, r: r });\n    c2 = new SDK.Circle({ x: shielded.right, y: shielded.top, r: r });\n    c3 = new SDK.Circle({ x: shielded.right, y: shielded.bottom, r: r });\n    c4 = new SDK.Circle({ x: shielded.left, y: shielded.bottom, r: r });\n    r1 = new SDK.Rectangle({\n      x: shielded.left - r,\n      y: shielded.top,\n      width: shielded.width + 2 * r,\n      height: shielded.height\n    });\n    r2 = new SDK.Rectangle({\n      x: shielded.left,\n      y: shielded.top - r,\n      width: shielded.width,\n      height: shielded.height + 2 * r\n    });\n\n    return (\n      c1.containsPoint(laser.A.x, laser.A.y) ||\n      c1.containsPoint(laser.B.x, laser.B.y) ||\n      c2.containsPoint(laser.A.x, laser.A.y) ||\n      c2.containsPoint(laser.B.x, laser.B.y) ||\n      c3.containsPoint(laser.A.x, laser.A.y) ||\n      c3.containsPoint(laser.B.x, laser.B.y) ||\n      c4.containsPoint(laser.A.x, laser.A.y) ||\n      c4.containsPoint(laser.B.x, laser.B.y) ||\n      r1.contains(laser.A.x, laser.A.y) ||\n      r1.contains(laser.B.x, laser.B.y) ||\n      r2.contains(laser.A.x, laser.A.y) ||\n      r2.contains(laser.B.x, laser.B.y)\n    );\n  };\n\n  Shield.prototype.draw = function(ctx, camera) {\n    var left = this.shielded.x - this.r;\n    var top = this.shielded.y - this.r;\n    var right = left + 2 * this.r + this.shielded.width;\n    var bottom = top + 2 * this.r + this.shielded.height;\n    var lineWidth = 2;\n\n    ctx.save();\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.4)\";\n    ctx.strokeStyle = this.shielded.color;\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(left), camera.applyToY(top + this.r));\n    ctx.arcTo(\n      camera.applyToX(left),\n      camera.applyToY(top),\n      camera.applyToX(left + this.r),\n      camera.applyToY(top),\n      camera.applyToDistance(this.r)\n    );\n    ctx.lineTo(camera.applyToX(right - this.r), camera.applyToY(top));\n    ctx.arcTo(\n      camera.applyToX(right),\n      camera.applyToY(top),\n      camera.applyToX(right),\n      camera.applyToY(top + this.r),\n      camera.applyToDistance(this.r)\n    );\n    ctx.lineTo(camera.applyToX(right), camera.applyToY(bottom - this.r));\n    ctx.arcTo(\n      camera.applyToX(right),\n      camera.applyToY(bottom),\n      camera.applyToX(right - this.r),\n      camera.applyToY(bottom),\n      camera.applyToDistance(this.r)\n    );\n    ctx.lineTo(camera.applyToX(left + this.r), camera.applyToY(bottom));\n    ctx.arcTo(\n      camera.applyToX(left),\n      camera.applyToY(bottom),\n      camera.applyToX(left),\n      camera.applyToY(bottom - this.r),\n      camera.applyToDistance(this.r)\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  };\n\n  return Shield;\n})();\n\nmodule.exports = Shield;\n","var Skill = (function() {\n  function Skill(props) {\n    SDK.Rectangle.call(this, props);\n\n    this.v = new SDK.Vector();\n    this.solid = false;\n    this.image = new Image();\n    this.image.src = props.src;\n  }\n\n  Skill.prototype = Object.create(SDK.Rectangle.prototype);\n  Skill.prototype.constructor = Skill;\n\n  Skill.prototype.update = function() {};\n\n  Skill.prototype.draw = function(ctx, camera) {\n    ctx.save();\n    ctx.drawImage(\n      this.image,\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.width),\n      camera.applyToDistance(this.height)\n    );\n    ctx.restore();\n  };\n\n  return Skill;\n})();\n\nmodule.exports = Skill;\n","var Skill = require(\"./skill\");\n\nfunction SkillHtml(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/html-5-icon.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillHtml.prototype = Object.create(Skill.prototype);\nSkillHtml.prototype.constructor = SkillHtml;\n\nfunction SkillCss(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/css-3-icon.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillCss.prototype = Object.create(Skill.prototype);\nSkillCss.prototype.constructor = SkillCss;\n\nfunction SkillSass(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/sass-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillSass.prototype = Object.create(Skill.prototype);\nSkillSass.prototype.constructor = SkillSass;\n\nfunction SkillBootstrap(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/bootstrap-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillBootstrap.prototype = Object.create(Skill.prototype);\nSkillBootstrap.prototype.constructor = SkillBootstrap;\n\nfunction SkillJquery(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/jquery-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillJquery.prototype = Object.create(Skill.prototype);\nSkillJquery.prototype.constructor = SkillJquery;\n\nfunction SkillReact(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/react-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillReact.prototype = Object.create(Skill.prototype);\nSkillReact.prototype.constructor = SkillReact;\n\nfunction SkillAngular(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/angular-logo.svg\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillAngular.prototype = Object.create(Skill.prototype);\nSkillAngular.prototype.constructor = SkillAngular;\n\nfunction SkillNode(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/nodejs-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillNode.prototype = Object.create(Skill.prototype);\nSkillNode.prototype.constructor = SkillNode;\n\nfunction SkillMeteor(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/meteor-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillMeteor.prototype = Object.create(Skill.prototype);\nSkillMeteor.prototype.constructor = SkillMeteor;\n\nfunction SkillMongo(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/mongodb-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillMongo.prototype = Object.create(Skill.prototype);\nSkillMongo.prototype.constructor = SkillMongo;\n\nmodule.exports = {\n  SkillAngular: SkillAngular,\n  SkillBootstrap: SkillBootstrap,\n  SkillCss: SkillCss,\n  SkillHtml: SkillHtml,\n  SkillJquery: SkillJquery,\n  SkillMeteor: SkillMeteor,\n  SkillMongo: SkillMongo,\n  SkillNode: SkillNode,\n  SkillReact: SkillReact,\n  SkillSass: SkillSass\n};\n","var SmokeParticle = (function() {\n  function SmokeParticle(props) {\n    SDK.Particle.call(this, props);\n\n    this.image = new Image();\n    this.image.src = \"./assets/images/smoke2.png\";\n  }\n\n  SmokeParticle.prototype = Object.create(SDK.Particle.prototype);\n  SmokeParticle.prototype.constructor = SmokeParticle;\n\n  SmokeParticle.prototype.draw = function(ctx, camera) {\n    ctx.globalAlpha = Math.max(\n      0,\n      1 - (Date.now() - this.createdAt) / this.maxLife\n    );\n    ctx.save();\n    ctx.drawImage(\n      this.image,\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.size),\n      camera.applyToDistance(this.size)\n    );\n    ctx.restore();\n  };\n  return SmokeParticle;\n})();\n\nmodule.exports = SmokeParticle;\n","var LevelEditor = require(\"./levelEditor/gameLevelEditor\");\n\nwindow.addEventListener(\"DOMContentLoaded\", function() {\n  function fitCanvasToContainer() {\n    var canvases = document.getElementsByTagName(\"canvas\");\n    for (var i = 0; i < canvases.length; i++) {\n      var canvas = canvases[i];\n      canvas.setAttribute(\n        \"width\",\n        parseFloat(window.getComputedStyle(canvas).width)\n      );\n      canvas.setAttribute(\n        \"height\",\n        parseFloat(window.getComputedStyle(canvas).height)\n      );\n    }\n  }\n  window.addEventListener(\"resize\", fitCanvasToContainer);\n  fitCanvasToContainer();\n\n  // start level editor\n  window.levelEditor = new LevelEditor();\n  levelEditor.init({\n    rulers: true\n  });\n  levelEditor.start();\n});\n","var CreationTool = (function() {\n  var defaultOptions = {\n    Player: {},\n    Ennemy: {},\n    Skill: {},\n    Platform: {\n      passthrough: false\n    },\n    MovingPlatform: {\n      passthrough: false,\n      positionRatio: 0\n    }\n  };\n\n  function CreationTool(props) {\n    this.gameObjects = props.gameObjects;\n    this.camera = props.camera;\n    this.mouse = props.mouse;\n    this.grid = props.grid;\n    this.canvas = props.canvas;\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n\n    this.eventHandlers = {\n      mouse: {\n        mousedown: {\n          handler: this.handleMouseDown,\n          props: undefined\n        },\n        mouseup: {\n          handler: this.handleMouseUp,\n          props: undefined\n        },\n        mousemove: {\n          handler: this.handleMouseMove,\n          props: undefined\n        }\n      }\n    };\n  }\n\n  CreationTool.prototype.handleMouseDown = function handleMouseDown(e) {\n    var mouseGamePosSnappedToGrid = this.grid.getMouseGamePosSnappedToGrid(\n      this.mouse.x,\n      this.mouse.y\n    );\n\n    switch (e.button) {\n      case 0:\n        // left mouse button\n        var Constructor = this.gameObjectConstructor;\n        var gameObject = new Constructor({\n          x: mouseGamePosSnappedToGrid.x,\n          y: mouseGamePosSnappedToGrid.y\n        });\n        this.gameObjects.push(gameObject);\n        switch (Constructor.name) {\n          case \"Platform\":\n          case \"MovingPlatform\":\n            this.currentObject = gameObject;\n            break;\n          default:\n            this.currentObject = null;\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  CreationTool.prototype.handleMouseUp = function handleMouseUp(e) {\n    switch (e.button) {\n      case 0: // left mouse button\n        this.canvas.style.cursor = \"\";\n        break;\n      case 2: // right mouse button\n        this.clickedObject = null;\n        break;\n      default:\n        break;\n    }\n  };\n\n  CreationTool.prototype.handleMouseMove = function handleMouseMove(e) {\n    var clickGamePosSnappedToGrid = this.grid.getMouseGamePosSnappedToGrid(\n      this.mouse.clickX,\n      this.mouse.clickY\n    );\n    var mouseGamePosSnappedToGrid = this.grid.getMouseGamePosSnappedToGrid(\n      this.mouse.x,\n      this.mouse.y\n    );\n    var mouseGameDisplacement = SDK.Vector.subtract(\n      mouseGamePosSnappedToGrid,\n      clickGamePosSnappedToGrid\n    );\n\n    // move this.camera when mouse wheel is held down\n    if (this.mouse.buttons[0]) {\n      if (this.currentObject) {\n        this.currentObject.width = Math.max(0, mouseGameDisplacement.x);\n        this.currentObject.height = Math.max(0, mouseGameDisplacement.y);\n      }\n    }\n  };\n\n  return CreationTool;\n})();\n\nmodule.exports = CreationTool;\n","var CreationTool = require(\"./creationTool\");\nvar SelectionTool = require(\"./selectionTool\");\nvar KeyboardManager = require(\"./keyboardManager\");\nvar LevelManager = require(\"../game/levelManager\");\nvar Toolbar = require(\"./toolbar\");\nvar ToolManager = require(\"./toolManager\");\nvar utils = require('../utils');\nwindow.gameData = require(\"../game/gameData.json\");\n\nvar LevelEditor = (function() {\n  function LevelEditor(options) {\n    this.data = {};\n  }\n\n  LevelEditor.prototype.init = function(config) {\n    this.shouldDisplayRulers =\n      config.shouldDisplayRulers !== undefined\n        ? config.shouldDisplayRulers\n        : true;\n    this.canvas = document.getElementById(\"canvas\");\n    this.ctx = canvas.getContext(\"2d\");\n    this.keyboard = new KeyboardManager(this);\n    this.mouse = new SDK.MouseManager(this);\n    this.soundManager = new SDK.SoundManager(gameData);\n    this.levelManager = new LevelManager(this);\n    this.gameObjects = [];\n    this.camera = new SDK.Camera({\n      zoomLevel: 0.05,\n      worldRect: this.worldRect,\n      canvas: this.canvas\n    });\n    this.grid = new SDK.Grid({\n      options: {\n        shouldDisplayRulers: config.shouldDisplayRulers,\n        isGame: false\n      },\n      camera: this.camera,\n      canvas: this.canvas,\n      mouse: this.mouse\n    });\n    this.selectionTool = new SelectionTool({\n      gameObjects: this.gameObjects,\n      camera: this.camera,\n      mouse: this.mouse,\n      grid: this.grid,\n      canvas: this.canvas\n    });\n    this.creationTool = new CreationTool({\n      gameObjects: this.gameObjects,\n      camera: this.camera,\n      mouse: this.mouse,\n      grid: this.grid,\n      canvas: this.canvas\n    });\n    this.tools = {\n      0: this.selectionTool,\n      1: this.creationTool\n    };\n    this.toolManager = new ToolManager({\n      mouse: this.mouse,\n      canvas: this.canvas,\n      tools: this.tools\n    });\n    this.toolbar = new Toolbar({ app: this, tools: this.tools });\n  };\n\n  LevelEditor.prototype.loadGameDataFromLocalStorage = function() {\n    var savedData = localStorage.getItem(\"gameData\");\n    if (savedData) {\n      gameData = JSON.parse(savedData);\n    }\n  };\n\n  LevelEditor.prototype.buildLevel = function(name) {\n    this.level = this.levelManager.buildLevel(name);\n    this.countdownStart = this.level.countdownStart;\n    this.worldRect = this.level.worldRect;\n    this.gameObjects.length = 0; // clear the array without reassigning\n    Array.prototype.push.apply(\n      this.gameObjects,\n      [].concat(\n        this.level.player,\n        this.level.platforms,\n        this.level.ennemies,\n        this.level.skills\n      )\n    );\n    this.updateToolbar();\n  };\n\n  LevelEditor.prototype.updateToolbar = function() {\n    utils.emptyElement(this.toolbar.loadLevelSelect);\n    var levelSelectionOptions = [utils.h(\"option\", { value: \"\" }, \"\")].concat(\n      Object.keys(gameData.levels).map(function(item) {\n        return utils.h(\"option\", { id: item, value: item }, item);\n      })\n    );\n    levelSelectionOptions.forEach(function(option) {\n      this.toolbar.loadLevelSelect.appendChild(utils.render(option));\n    }, this);\n    if (this.level) {\n      this.toolbar.loadLevelSelect.value = this.level.name;\n      this.toolbar.levelNameInput.value = this.level.name;\n      this.toolbar.countdownInput.value = this.level.countdownStart;\n      this.toolbar.worldXInput.value = this.level.worldRect.x;\n      this.toolbar.worldYInput.value = this.level.worldRect.y;\n      this.toolbar.worldWidthInput.value = this.level.worldRect.width;\n      this.toolbar.worldHeightInput.value = this.level.worldRect.height;\n    }\n  };\n\n  LevelEditor.prototype.handleKeyboard = function() {};\n\n  LevelEditor.prototype.updateScene = function() {\n    this.camera.update();\n  };\n\n  LevelEditor.prototype.renderBackground = function(ctx) {\n    this.fillCanvas(ctx, \"#111\");\n    ctx.save();\n    for (var i = 0; i < this.starCount; i++) {\n      var star = this.stars[i];\n      ctx.fillStyle = \"rgba(255, 255, 255, \" + star.opacity + \")\";\n      ctx.beginPath();\n      ctx.arc(\n        (star.x - this.camera.x * 0.3 + this.canvas.width) % this.canvas.width,\n        (star.y - this.camera.y * 0.3 + this.canvas.height) %\n          this.canvas.height,\n        star.r,\n        0,\n        Math.PI * 2\n      );\n      ctx.fill();\n    }\n    ctx.restore();\n  };\n\n  LevelEditor.prototype.updateTimeEllapsed = function() {\n    this.previousTime = this.currentTime || Date.now();\n    this.currentTime = Date.now();\n    return (this.currentTime - this.previousTime) / 1000;\n  };\n\n  LevelEditor.prototype.clearCanvas = function(ctx) {\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  LevelEditor.prototype.fillCanvas = function(ctx, color) {\n    ctx.fillStyle = color;\n    ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  LevelEditor.prototype.drawGrid = function(ctx) {\n    this.grid.draw(ctx, this.camera, {\n      shouldDisplayRulers: this.shouldDisplayRulers\n    });\n  };\n\n  LevelEditor.prototype.drawSelectionRectangle = function(ctx, camera) {\n    var selectionArea = this.selectionTool.selectionArea;\n    if (selectionArea) {\n      ctx.save();\n      ctx.fillStyle = \"rgba(255, 255, 255, 0.5)\";\n      ctx.fillRect(\n        camera.applyToX(selectionArea.x),\n        camera.applyToY(selectionArea.y),\n        camera.applyToDistance(selectionArea.width),\n        camera.applyToDistance(selectionArea.height)\n      );\n      ctx.restore();\n    }\n  };\n\n  LevelEditor.prototype.drawSelectionOutlines = function(ctx, camera) {\n    var selectedObjects = this.selectionTool.selection.map(function(item) {\n      return item.object;\n    });\n\n    if (!selectedObjects || selectedObjects.length === 0) return;\n\n    var selectionRectangle = this.selectionTool.getSelectionBoundingRect();\n    var lineWidth = 1;\n\n    ctx.save();\n    ctx.strokeStyle = \"white\";\n    ctx.lineWidth = lineWidth; // do not scale line width for visibility reasons\n    ctx.beginPath();\n    ctx.rect(\n      camera.applyToX(selectionRectangle.x),\n      camera.applyToY(selectionRectangle.y),\n      camera.applyToDistance(selectionRectangle.width),\n      camera.applyToDistance(selectionRectangle.height)\n    );\n    ctx.stroke();\n\n    selectedObjects.forEach(function(selectedObject) {\n      ctx.beginPath();\n      ctx.rect(\n        camera.applyToX(selectedObject.x) - lineWidth / 2,\n        camera.applyToY(selectedObject.y) - lineWidth / 2,\n        camera.applyToDistance(selectedObject.width) + lineWidth,\n        camera.applyToDistance(selectedObject.height) + lineWidth\n      );\n      ctx.stroke();\n    });\n    ctx.restore();\n  };\n\n  LevelEditor.prototype.drawResizeHandles = function(ctx, camera) {\n    if (!this.selectionTool.selection.length) {\n      return;\n    }\n\n    var selectionRectangle = this.selectionTool.getSelectionBoundingRect();\n\n    ctx.save();\n    ctx.fillStyle = this.tools[0].resizeHandleHovered ? \"cyan\" : \"blue\";\n    ctx.fillRect(\n      camera.applyToX(selectionRectangle.right),\n      camera.applyToY(selectionRectangle.bottom),\n      20,\n      20\n    );\n    ctx.restore();\n  };\n\n  LevelEditor.prototype.renderScene = function(ctx, camera) {\n    // optimize rendering by only drawing objects that are on screen\n    this.drawGrid(ctx, camera);\n\n    // draw game objects\n    this.gameObjects.forEach(function(gameObject) {\n      gameObject.getBoundingRect().overlaps(camera) &&\n        gameObject.draw(ctx, camera);\n\n      // draw the end state of moving platforms\n      if (gameObject.constructor.name === \"MovingPlatform\") {\n        ctx.save();\n        var lineWidth = 2;\n        ctx.globalAlpha = 0.4;\n        ctx.strokeStyle = gameObject.color;\n        ctx.strokeStyle = \"red\";\n        ctx.fillStyle = \"rgb(255, 255, 255)\";\n        ctx.lineWidth = lineWidth;\n        ctx.beginPath();\n        ctx.rect(\n          camera.applyToX(gameObject.xEnd) + lineWidth / 2,\n          camera.applyToY(gameObject.yEnd) + lineWidth / 2,\n          camera.applyToDistance(gameObject.width) - lineWidth,\n          camera.applyToDistance(gameObject.height) - lineWidth\n        );\n        ctx.stroke();\n        ctx.fill();\n\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(\n          camera.applyToX(gameObject.center.x),\n          camera.applyToY(gameObject.center.y)\n        );\n        ctx.lineTo(\n          camera.applyToX(gameObject.xEnd + gameObject.width / 2),\n          camera.applyToY(gameObject.yEnd + gameObject.height / 2)\n        );\n        ctx.stroke();\n        ctx.restore();\n      }\n    });\n\n    // draw selection rectangle\n    this.drawSelectionRectangle(ctx, camera);\n    this.drawSelectionOutlines(ctx, camera);\n    this.drawResizeHandles(ctx, camera);\n\n    // draw worldRect\n    ctx.save();\n    ctx.strokeStyle = \"red\";\n    ctx.beginPath();\n    ctx.strokeRect(\n      camera.applyToX(this.worldRect.x),\n      camera.applyToY(this.worldRect.y),\n      camera.applyToDistance(this.worldRect.width),\n      camera.applyToDistance(this.worldRect.height)\n    );\n    ctx.stroke();\n\n    ctx.restore();\n  };\n\n  LevelEditor.prototype.start = function() {\n    // initialize world size\n    this.worldRect = new SDK.Rectangle({\n      x: -5000,\n      y: -5000,\n      width: 10000,\n      height: 10000\n    });\n    this.camera.updateDimensions();\n    this.camera.x = this.worldRect.center.x - this.camera.width / 2;\n    this.camera.y = this.worldRect.center.y - this.camera.height / 2;\n\n    // local storage\n    this.loadGameDataFromLocalStorage();\n    // this.buildLevel();\n    this.updateToolbar();\n    this.main();\n  };\n\n  LevelEditor.prototype.main = function() {\n    var camera = this.camera;\n    dt = this.updateTimeEllapsed();\n    // this.handleKeyboard();\n    this.updateScene();\n    this.clearCanvas(this.ctx, camera);\n    this.renderBackground(this.ctx, camera);\n    this.renderScene(this.ctx, camera);\n\n    requestAnimationFrame(this.main.bind(this));\n  };\n\n  LevelEditor.prototype.generateJSONdata = function() {\n    var gameObjects = this.gameObjects;\n\n    // level name\n    this.data.name = this.toolbar.levelNameInput.value;\n\n    // level name\n    this.data.countdownStart = parseInt(this.toolbar.countdownInput.value);\n\n    // worldRect\n    this.data.worldRect = {\n      type: \"Rectangle\",\n      props: {\n        x: this.worldRect.x,\n        y: this.worldRect.y,\n        width: this.worldRect.width,\n        height: this.worldRect.height\n      }\n    };\n\n    // player\n    var player = gameObjects.filter(function(gameObject) {\n      return gameObject.constructor.name === \"Player\";\n    })[0];\n    if (!player) {\n      alert(\"You must add at least one player\");\n      return false;\n    }\n    this.data.player = player\n      ? {\n          type: \"Player\",\n          props: {\n            x: player.x,\n            y: player.y,\n            color: player.color\n          }\n        }\n      : null;\n\n    // platforms\n    this.data.platforms = [];\n    var platforms = gameObjects.filter(function(gameObject) {\n      return (\n        gameObject.constructor.name === \"Platform\" ||\n        gameObject.constructor.name === \"MovingPlatform\"\n      );\n    });\n    platforms.forEach(function(gameObject) {\n      var constructorName = gameObject.constructor.name;\n      var platformData = {\n        type: constructorName,\n        props: {\n          width: gameObject.width,\n          height: gameObject.height\n        }\n      };\n      platformData.props.x = gameObject.x;\n      platformData.props.y = gameObject.y;\n\n      if (constructorName === \"MovingPlatform\") {\n        platformData.props.xStart = gameObject.xStart;\n        platformData.props.yStart = gameObject.yStart;\n        platformData.props.xEnd = gameObject.xEnd;\n        platformData.props.yEnd = gameObject.yEnd;\n      }\n      this.data.platforms.push(platformData);\n    }, this);\n\n    // ennemies\n    this.data.ennemies = [];\n    var ennemies = gameObjects.filter(function(gameObject) {\n      return gameObject.constructor.name === \"Ennemy\";\n    });\n    ennemies.forEach(function(ennemy) {\n      var ennemyData = {\n        type: \"Ennemy\",\n        props: {\n          x: ennemy.x,\n          y: ennemy.y,\n          width: ennemy.width,\n          height: ennemy.height\n        }\n      };\n      this.data.ennemies.push(ennemyData);\n    }, this);\n\n    // skills\n    this.data.skills = [];\n    var skills = gameObjects.filter(function(gameObject) {\n      return gameObject.constructor.name.startsWith(\"Skill\");\n    });\n    skills.forEach(function(skill) {\n      var skillData = {\n        type: skill.constructor.name,\n        props: {\n          x: skill.x,\n          y: skill.y,\n          width: skill.width,\n          height: skill.height\n        }\n      };\n      this.data.skills.push(skillData);\n    }, this);\n\n    return true;\n  };\n\n  LevelEditor.prototype.saveToLocalStorage = function() {\n    if (this.generateJSONdata()) {\n      gameData.levels[this.data.name] = this.data;\n      var json = JSON.stringify(gameData);\n      localStorage.setItem(\"gameData\", json);\n      this.updateToolbar();\n    }\n  };\n\n  return LevelEditor;\n})();\n\nmodule.exports = LevelEditor;\n","var KeyboardManager = (function() {\n  function KeyboardManager(game) {\n    // reference to the game object\n    this.game = game;\n\n    var codeMappings = {\n      ArrowLeft: \"LEFT\",\n      ArrowUp: \"UP\",\n      ArrowRight: \"RIGHT\",\n      ArrowDown: \"DOWN\",\n      KeyW: \"UP\",\n      KeyA: \"LEFT\",\n      KeyS: \"DOWN\",\n      KeyD: \"RIGHT\",\n      Enter: \"ENTER\",\n      Space: \"SPACE\",\n      Escape: \"ESCAPE\"\n    };\n    var keyCodeMappings = {\n      37: \"LEFT\",\n      38: \"UP\",\n      39: \"RIGHT\",\n      40: \"DOWN\",\n      90: \"UP\",\n      81: \"LEFT\",\n      93: \"DOWN\",\n      68: \"RIGHT\",\n      13: \"ENTER\",\n      32: \"SPACE\",\n      27: \"ESCAPE\"\n    };\n\n    window.addEventListener(\"keydown\", this.handleKeydown.bind(this));\n\n    this.keyRepeat = {};\n  }\n\n  KeyboardManager.prototype.handleKeydown = function handleKeydown(event) {\n    var mouseGamePosSnappedToGrid = this.game.grid.getMouseGamePosSnappedToGrid(\n      this.game.mouse.x,\n      this.game.mouse.y\n    );\n\n    switch (event.keyCode) {\n      case 46: // Delete\n        var selection = this.game.tools[0].selection;\n        if (selection.length) {\n          while (selection[0]) {\n            var selectedObject = selection[0].object;\n            var gameObjectIndex = this.game.gameObjects.indexOf(selectedObject);\n            gameObjectIndex >= 0 &&\n              this.game.gameObjects.splice(gameObjectIndex, 1);\n            selection.shift();\n          }\n        }\n        break;\n      case 27: // Escape\n        this.game.tools[0].selection = [];\n        break;\n      case 65: // A key\n        this.game.toolManager.tool = 0; // switch to selection context\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.game.tools[0].selection = this.game.gameObjects.map(function(\n            obj\n          ) {\n            return {\n              object: obj,\n              objectStart: Object.assign({}, obj)\n            };\n          });\n        }\n        break;\n      case 83:\n        this.game.toolManager.tool = 0;\n        break;\n      case 67:\n        this.game.toolManager.tool = 1;\n        this.game.toolbar.objectTypeDropDown.focus();\n        break;\n      case 37:\n        this.game.camera.x -= 20 / this.game.camera.zoomLevel;\n        break;\n      case 38:\n        this.game.camera.y -= 20 / this.game.camera.zoomLevel;\n        break;\n      case 39:\n        this.game.camera.x += 20 / this.game.camera.zoomLevel;\n        break;\n      case 40:\n        this.game.camera.y += 20 / this.game.camera.zoomLevel;\n        break;\n      case 187:\n        event.preventDefault();\n        event.shiftKey\n          ? this.game.camera.zoomOut(\n              mouseGamePosSnappedToGrid.x,\n              mouseGamePosSnappedToGrid.y\n            )\n          : this.game.camera.zoomIn(\n              mouseGamePosSnappedToGrid.x,\n              mouseGamePosSnappedToGrid.y\n            );\n        break;\n      default:\n    }\n  };\n\n  return KeyboardManager;\n})();\n\nmodule.exports = KeyboardManager;\n","var SelectionTool = (function() {\n  function SelectionTool(props) {\n    this.gameObjects = props.gameObjects;\n    this.camera = props.camera;\n    this.mouse = props.mouse;\n    this.grid = props.grid;\n    this.canvas = props.canvas;\n\n    this.selection = [];\n    this.clickedObject = null;\n    this.selectionArea = null;\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n\n    this.eventHandlers = {\n      mouse: {\n        mousedown: {\n          handler: this.handleMouseDown,\n          props: undefined\n        },\n        mouseup: {\n          handler: this.handleMouseUp,\n          props: undefined\n        },\n        mousemove: {\n          handler: this.handleMouseMove,\n          props: undefined\n        }\n      }\n    };\n  }\n\n  SelectionTool.prototype.getSelectionBoundingRect = function() {\n    var selectedObjects = this.selection.map(function(item) {\n      return item.object;\n    });\n    var left = Math.min.apply(\n      null,\n      selectedObjects.map(function(obj) {\n        return obj.getBoundingRect().left;\n      })\n    );\n    var top = Math.min.apply(\n      null,\n      selectedObjects.map(function(obj) {\n        return obj.getBoundingRect().top;\n      })\n    );\n    var width =\n      Math.max.apply(\n        null,\n        selectedObjects.map(function(obj) {\n          return obj.getBoundingRect().right;\n        })\n      ) - left;\n    var height =\n      Math.max.apply(\n        null,\n        selectedObjects.map(function(obj) {\n          return obj.getBoundingRect().bottom;\n        })\n      ) - top;\n    return new SDK.Rectangle({ x: left, y: top, width: width, height: height });\n  };\n\n  SelectionTool.prototype.handleMouseDown = function handleMouseDown(e) {\n    var mouseGamePosSnappedToGrid = this.grid.getMouseGamePosSnappedToGrid(\n      this.mouse.x,\n      this.mouse.y\n    );\n    var newSelection = [];\n\n    switch (e.button) {\n      case 0:\n        // check if the player clicked a resize handle\n        this.resizeHandleClicked = this.isMouseInsideResizeHandle();\n        if (this.resizeHandleClicked) return;\n\n        // find the most recently added game object the click was inside of\n        this.clickedObject = this.getClickedObject(\n          mouseGamePosSnappedToGrid.x,\n          mouseGamePosSnappedToGrid.y\n        );\n\n        if (this.clickedObject) {\n          newSelection = [\n            {\n              object: this.clickedObject,\n              objectStart: Object.assign({}, this.clickedObject) // copy\n            }\n          ];\n        }\n\n        // check if clicked object already belongs to a previous selection\n        var selectionObjects = this.selection.map(function(item) {\n          return item.object;\n        });\n        if (\n          this.clickedObject &&\n          selectionObjects.includes(this.clickedObject)\n        ) {\n          newSelection = this.selection;\n        }\n\n        this.selection = newSelection;\n\n        // create selection area if no object was selected\n        if (!this.clickedObject) {\n          this.selectionArea = new SDK.Rectangle({\n            x: mouseGamePosSnappedToGrid.x,\n            y: mouseGamePosSnappedToGrid.y\n          });\n        }\n        break;\n      case 2:\n        var clickedObject = this.getClickedObject(\n          mouseGamePosSnappedToGrid.x,\n          mouseGamePosSnappedToGrid.y\n        );\n        if (\n          clickedObject &&\n          clickedObject.constructor.name === \"MovingPlatform\"\n        ) {\n          this.clickedObject = clickedObject;\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  SelectionTool.prototype.isMouseInsideResizeHandle = function() {\n    if (this.selection) {\n      var selectionRectangle = this.getSelectionBoundingRect();\n      var resizeHandlePos = this.camera.apply(\n        selectionRectangle.right,\n        selectionRectangle.bottom\n      );\n      var resizeHandleRectangle = new SDK.Rectangle({\n        x: resizeHandlePos.x,\n        y: resizeHandlePos.y,\n        width: 20,\n        height: 20\n      });\n\n      return resizeHandleRectangle.contains(this.mouse.x, this.mouse.y);\n    }\n  };\n\n  SelectionTool.prototype.getClickedObject = function(x, y) {\n    var clickedObject = null;\n    for (var i = 0; i < this.gameObjects.length; i++) {\n      var gameObject = this.gameObjects[i];\n      if (gameObject.getBoundingRect().contains(x, y)) {\n        clickedObject = gameObject;\n      }\n    }\n    return clickedObject;\n  };\n\n  SelectionTool.prototype.handleMouseMove = function handleMouseMove(e) {\n    var clickGamePosSnappedToGrid = this.grid.getMouseGamePosSnappedToGrid(\n      this.mouse.clickX,\n      this.mouse.clickY\n    );\n    var mouseGamePosSnappedToGrid = this.grid.getMouseGamePosSnappedToGrid(\n      this.mouse.x,\n      this.mouse.y\n    );\n    var mouseGameDisplacement = SDK.Vector.subtract(\n      mouseGamePosSnappedToGrid,\n      clickGamePosSnappedToGrid\n    );\n    // no button down and mouse is inside a resize handle\n    if (\n      !this.mouse.buttons[0] &&\n      !this.mouse.buttons[1] &&\n      !this.mouse.buttons[2]\n    ) {\n      this.resizeHandleHovered = this.isMouseInsideResizeHandle();\n      return;\n    }\n    // left button down\n    if (this.mouse.buttons[0]) {\n      // resize selection objects if resize handle was clicked\n      if (this.resizeHandleClicked) {\n        this.resizeSelectedObjects(\n          mouseGameDisplacement.x,\n          mouseGameDisplacement.y\n        );\n        return;\n      }\n      if (this.selectionArea) {\n        this.selectionArea.width = mouseGameDisplacement.x;\n        this.selectionArea.height = mouseGameDisplacement.y;\n      } else {\n        this.moveSelectedObjects(\n          mouseGameDisplacement.x,\n          mouseGameDisplacement.y\n        );\n      }\n    }\n    // right button down\n    if (this.mouse.buttons[2]) {\n      if (this.clickedObject) {\n        this.clickedObject.xEnd =\n          this.clickedObject.xStart + mouseGameDisplacement.x;\n        this.clickedObject.yEnd =\n          this.clickedObject.yStart + mouseGameDisplacement.y;\n      }\n    }\n  };\n\n  SelectionTool.prototype.resizeSelectedObjects = function(dx, dy) {\n    this.selection.forEach(function(item) {\n      item.object.width = item.objectStart.width + dx;\n      item.object.height = item.objectStart.height + dy;\n    });\n  };\n\n  SelectionTool.prototype.moveSelectedObjects = function(dx, dy) {\n    this.selection.forEach(function(item) {\n      item.object.x = item.objectStart.x + dx;\n      item.object.y = item.objectStart.y + dy;\n      item.object.xStart = item.objectStart.xStart + dx;\n      item.object.yStart = item.objectStart.yStart + dy;\n      item.object.xEnd = item.objectStart.xEnd + dx;\n      item.object.yEnd = item.objectStart.yEnd + dy;\n    });\n  };\n\n  SelectionTool.prototype.handleMouseUp = function handleMouseUp(e) {\n    switch (e.button) {\n      case 0: // left button up\n        if (this.resizeHandleClicked) {\n          this.resizeHandleClicked = false; // release handle\n          this.selection.forEach(function(item) {\n            item.objectStart.width = item.object.width;\n            item.objectStart.height = item.object.height;\n          });\n          return;\n        }\n\n        if (this.selection.length) {\n          if (\n            this.mouse.releaseX === this.mouse.clickX &&\n            this.mouse.releaseY === this.mouse.clickY\n          ) {\n            // If click and release at the same spot, select the most recently added game object the click was inside of\n            this.selection = [\n              {\n                object: this.clickedObject\n              }\n            ];\n          }\n\n          this.selection.forEach(function(item) {\n            item.objectStart = Object.assign({}, item.object);\n          });\n\n          return;\n        }\n\n        if (this.selectionArea) {\n          // which objects are in the selection area?\n          this.selection = [];\n          this.gameObjects.forEach(\n            function(obj) {\n              if (obj.getBoundingRect().overlaps(this.selectionArea)) {\n                this.selection.push({\n                  object: obj,\n                  objectStart: Object.assign({}, obj)\n                });\n              }\n            }.bind(this)\n          );\n          this.selectionArea = null;\n        }\n        break;\n      case 2:\n        if (this.selection.length && this.clickedObject) {\n          this.selection[0].objectStart.xEnd = this.clickedObject.xEnd;\n          this.selection[0].objectStart.yEnd = this.clickedObject.yEnd;\n        }\n        this.clickedObject = null;\n        break;\n      default:\n        break;\n    }\n  };\n\n  return SelectionTool;\n})();\n\nmodule.exports = SelectionTool;\n","function ToolManager(props) {\n  this.tools = props.tools;\n  this.mouse = props.mouse;\n  this.canvas = props.canvas;\n  this.toolID = 0;\n  this.setEventHandlersForTool(this.toolID);\n}\n\nObject.defineProperties(ToolManager.prototype, {\n  tool: {\n    get: function() {\n      return this.toolID;\n    },\n    set: function(id) {\n      if (id !== this.toolID) {\n        this.unsetEventHandlersForTool(this.toolID);\n        this.setEventHandlersForTool(id);\n        this.toolID = id;\n      }\n    }\n  }\n});\n\nToolManager.prototype.unsetEventHandlersForTool = function(id) {\n  var entries = Object.entries(this.tools[id].eventHandlers.mouse);\n  for (var i = 0; i < entries.length; i++) {\n    var key = entries[i][0];\n    var value = entries[i][1];\n    this.mouse.off(this.canvas, key, value.handler, value.props);\n  }\n};\n\nToolManager.prototype.setEventHandlersForTool = function(id) {\n  var entries = Object.entries(this.tools[id].eventHandlers.mouse);\n  for (var i = 0; i < entries.length; i++) {\n    var key = entries[i][0];\n    var value = entries[i][1];\n    this.mouse.on(this.canvas, key, value.handler, value.props);\n  }\n};\n\nmodule.exports = ToolManager;\n","var Player = require(\"../game/player\");\nvar Ennemy = require(\"../game/ennemy\");\nvar Platform = require(\"../game/platform\");\nvar MovingPlatform = require(\"../game/movingPlatform\");\nvar skills = require(\"../game/skills\");\nvar SkillHtml = skills.SkillHtml;\nvar SkillCss = skills.SkillCss;\nvar SkillSass = skills.SkillSass;\nvar SkillBootstrap = skills.SkillBootstrap;\nvar SkillReact = skills.SkillReact;\nvar SkillAngular = skills.SkillAngular;\nvar SkillJquery = skills.SkillJquery;\nvar SkillNode = skills.SkillNode;\nvar SkillMongo = skills.SkillMongo;\nvar SkillMeteor = skills.SkillMeteor;\n\nvar Toolbar = (function() {\n  function Toolbar(props) {\n    this.el = document.getElementById(\"toolbar\");\n    this.loadLevelSelect = document.getElementById(\"load\");\n    this.levelNameInput = document.getElementById(\"level-name\");\n    this.countdownInput = document.getElementById(\"level-countdown\");\n    this.worldXInput = document.getElementById(\"world-x\");\n    this.worldYInput = document.getElementById(\"world-y\");\n    this.worldWidthInput = document.getElementById(\"world-width\");\n    this.worldHeightInput = document.getElementById(\"world-height\");\n    this.selectButton = document.getElementById(\"button-select\");\n    this.createButton = document.getElementById(\"button-create\");\n    this.objectTypeDropDown = document.getElementById(\"object-type\");\n    this.saveButton = document.getElementById(\"save-button\");\n    this.deleteButton = document.getElementById(\"delete-button\");\n\n    this.deleteButton.addEventListener(\n      \"click\",\n      function(e) {\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        var currentLevelName = this.loadLevelSelect.value;\n        var confirmDelete = window.confirm(\n          \"Are you sure you want to delete the current level?\"\n        );\n        if (confirmDelete && gameData.levels[currentLevelName]) {\n          delete gameData.levels[currentLevelName];\n          localStorage.setItem(\"gameData\", JSON.stringify(gameData));\n          this.app.start();\n        }\n      }.bind(this)\n    );\n    this.loadLevelSelect.addEventListener(\n      \"change\",\n      function(e) {\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        e.target.value === \"\" && this.app.start();\n        e.target.value !== \"\" && this.app.buildLevel(e.target.value);\n      }.bind(this)\n    );\n    this.worldXInput.addEventListener(\n      \"change\",\n      function(e) {\n        var app = this.app;\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        app.worldRect.x = parseInt(e.target.value);\n      }.bind(this)\n    );\n    this.worldYInput.addEventListener(\n      \"change\",\n      function(e) {\n        var app = this.app;\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        app.worldRect.y = parseInt(e.target.value);\n      }.bind(this)\n    );\n    this.worldWidthInput.addEventListener(\n      \"change\",\n      function(e) {\n        var app = this.app;\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        app.worldRect.width = parseInt(e.target.value);\n      }.bind(this)\n    );\n    this.worldHeightInput.addEventListener(\n      \"change\",\n      function(e) {\n        var app = this.app;\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        app.worldRect.height = parseInt(e.target.value);\n      }.bind(this)\n    );\n    this.selectButton.addEventListener(\n      \"click\",\n      function(e) {\n        var app = this.app;\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        app.toolManager.tool = 0;\n      }.bind(this)\n    );\n    this.createButton.addEventListener(\n      \"click\",\n      function(e) {\n        var app = this.app;\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        app.toolManager.tool = 1;\n      }.bind(this)\n    );\n    this.saveButton.addEventListener(\n      \"click\",\n      function(e) {\n        var app = this.app;\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        app.saveToLocalStorage();\n      }.bind(this)\n    );\n\n    this.objectTypeDropDown.addEventListener(\n      \"change\",\n      function(e) {\n        e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n        this.objectTypeDropDown.focus();\n        var app = this.app;\n        var objectType = this.getGameObjectType();\n        app.toolManager.tool = 1;\n        switch (objectType) {\n          case \"Player\":\n          case \"Ennemy\":\n          case \"SkillHtml\":\n          case \"SkillCss\":\n          case \"SkillSass\":\n          case \"SkillBootstrap\":\n          case \"SkillJquery\":\n          case \"SkillReact\":\n          case \"SkillAngular\":\n          case \"SkillMongo\":\n          case \"SkillNode\":\n          case \"SkillMeteor\":\n            app.toolManager.tool = 1;\n            break;\n          case \"Platform\":\n          case \"MovingPlatform\":\n            app.toolManager.tool = 2;\n            break;\n          default:\n            break;\n        }\n      }.bind(this)\n    );\n\n    this.tools = props.tools;\n    this.app = props.app;\n    this.getGameObjectType();\n  }\n\n  Toolbar.prototype.getGameObjectType = function() {\n    var app = this.app;\n    var type = this.objectTypeDropDown.value;\n    var objectTypeMap = {\n      player: Player,\n      platform: Platform,\n      movingPlatform: MovingPlatform,\n      ennemy: Ennemy,\n      skillHtml: SkillHtml,\n      skillCss: SkillCss,\n      skillSass: SkillSass,\n      skillBootstrap: SkillBootstrap,\n      skillJquery: SkillJquery,\n      skillReact: SkillReact,\n      skillAngular: SkillAngular,\n      skillNode: SkillNode,\n      skillMongo: SkillMongo,\n      skillMeteor: SkillMeteor\n    };\n    this.tools[1].gameObjectConstructor = objectTypeMap[type];\n  };\n\n  return Toolbar;\n})();\n\nmodule.exports = Toolbar;\n","module.exports = {\n  toFixedPrecision: function(number, precision) {\n    return +number.toFixed(precision || 0);\n  },\n\n  noop: function() {},\n\n  randInt: function(start, end) {\n    return Math.floor(Math.random() * (end - start + 1) + start);\n  },\n\n  lerp: function(v0, v1, t) {\n    return (1 - t) * v0 + t * v1;\n  },\n\n  show: function(el) {\n    el.classList.remove(\"hidden\");\n  },\n\n  hide: function(el) {\n    el.classList.add(\"hidden\");\n  },\n\n  incrementID: (function() {\n    var id = -1;\n    return function() {\n      id = id + 1;\n      return id;\n    };\n  })(),\n\n  h: function(type, props, children) {\n    var el = document.createElement(type);\n    var nodes, node;\n    for (var key in props) {\n      el.setAttribute(key, props[key]);\n    }\n    if (Array.isArray(children)) {\n      nodes = children;\n    } else {\n      nodes = [children];\n    }\n    for (var i = 0; i < nodes.length; i++) {\n      if (typeof nodes[i] === \"string\") {\n        node = document.createTextNode(nodes[i]);\n      } else {\n        node = nodes[i];\n      }\n      el.appendChild(node);\n    }\n    return el;\n  },\n\n  /**\n   * Build DOM from virtual DOM tree.\n   * @param {Object} dom\n   */\n  render: function(vdom) {\n    return (function renderNode(vdom) {\n      if (vdom.split) return document.createTextNode(vdom);\n\n      const element = document.createElement(vdom.type);\n      const props = vdom.props || {};\n\n      Object.keys(props).forEach(function(key) {\n        // treat events separately\n        if (typeof props[key] !== \"function\") {\n          element.setAttribute(key, props[key]);\n        }\n\n        // events\n        if (typeof props[key] === \"function\") {\n          var eventType = key.substring(2); // remove the 'on' part\n          element.addEventListener(eventType, props[key]);\n        }\n      });\n\n      (vdom.children || []).forEach(function(vNode) {\n        return element.appendChild(renderNode(vNode));\n      });\n      return element;\n    })(vdom);\n  },\n\n  h: function() {\n    var vNode = {};\n    var type = arguments[0];\n    var props = arguments[1];\n    var children = Array.prototype.slice.call(arguments, 2);\n\n    vNode.type = type;\n    vNode.props = props;\n\n    if (children.length) {\n      vNode.children = children.reduce((acc, item) => {\n        return Array.isArray(item) ? [...acc, ...item] : [...acc, item];\n      }, []);\n    } else {\n      vNode.children = null;\n    }\n\n    return vNode;\n  },\n\n  emptyElement(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n};\n"],"sourceRoot":""}