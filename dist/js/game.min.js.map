{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/game/clock.js","webpack:///./js/game/collisionManager.js","webpack:///./js/game/ennemy.js","webpack:///./js/game/game.js","webpack:///./js/game/gameMenu.js","webpack:///./js/game/ghost.js","webpack:///./js/game/laser.js","webpack:///./js/game/levelManager.js","webpack:///./js/game/lifebar.js","webpack:///./js/game/movingPlatform.js","webpack:///./js/game/particleEmitters.js","webpack:///./js/game/platform.js","webpack:///./js/game/player.js","webpack:///./js/game/shield.js","webpack:///./js/game/skill.js","webpack:///./js/game/skillBar.js","webpack:///./js/game/skills.js","webpack:///./js/game/smokeParticle.js","webpack:///./js/index.js","webpack:///./js/utils.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC/EA,uBAAuB,mBAAO,CAAC,yDAAoB;AACnD,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClMA,YAAY,mBAAO,CAAC,mCAAS;;AAE7B;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACtDA,eAAe,mBAAO,CAAC,yCAAY;AACnC,uBAAuB,mBAAO,CAAC,yDAAoB;AACnD,mBAAmB,mBAAO,CAAC,iDAAgB;AAC3C,cAAc,mBAAO,CAAC,uCAAW;AACjC,eAAe,mBAAO,CAAC,yCAAY;AACnC,YAAY,mBAAO,CAAC,mCAAS;AAC7B,YAAY,mBAAO,CAAC,mCAAS;AAC7B,YAAY,mBAAO,CAAC,+BAAU;AAC9B,kBAAkB,mBAAO,CAAC,gDAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,aAAa;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,4BAA4B;AACtE;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAA4D;AACvE,WAAW,0DAA0D;AACrE,WAAW,oEAAoE;AAC/E,WAAW,8DAA8D;AACzE,WAAW,0DAA0D;AACrE,WAAW,4DAA4D;AACvE,WAAW,gEAAgE;AAC3E,WAAW,4DAA4D;AACvE,WAAW,8DAA8D;AACzE,WAAW,8DAA8D;AACzE;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,iBAAiB;AACxB;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;;;;;;;;;;;;ACniBA,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK,2BAA2B;AAChC;AACA;AACA,OAAO,wDAAwD;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA,iCAAiC,eAAe;AAChD;AACA,iCAAiC,eAAe;AAChD;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA,iCAAiC,eAAe;AAChD;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,qBAAqB;AAC5B;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpdA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACtDA,aAAa,mBAAO,CAAC,qCAAU;AAC/B,aAAa,mBAAO,CAAC,qCAAU;AAC/B,aAAa,mBAAO,CAAC,qCAAU;AAC/B,eAAe,mBAAO,CAAC,yCAAY;AACnC,qBAAqB,mBAAO,CAAC,qDAAkB;AAC/C,aAAa,mBAAO,CAAC,qCAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AChDA,eAAe,mBAAO,CAAC,yCAAY;AACnC,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC1EA,oBAAoB,mBAAO,CAAC,mDAAiB;AAC7C,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnPA;AACA;;AAEA;AACA;;AAEA;AACA,yEAAyE;AACzE;AACA,2EAA2E;AAC3E,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;ACrDA,aAAa,mBAAO,CAAC,qCAAU;AAC/B,uBAAuB,mBAAO,CAAC,yDAAoB;AACnD,YAAY,mBAAO,CAAC,+BAAU;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B,2BAA2B;AAC3B,oCAAoC;AACpC,4BAA4B,iBAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvQA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,0CAA0C;AACnE,yBAAyB,2CAA2C;AACpE,yBAAyB,8CAA8C;AACvE,yBAAyB,6CAA6C;AACtE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC3KA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;;;;;ACjCA,YAAY,mBAAO,CAAC,mCAAS;;AAE7B;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/IA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;;;;;AC7BA,YAAY,mBAAO,CAAC,8BAAS;AAC7B,WAAW,mBAAO,CAAC,sCAAa;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;AC3DD;AACA;AACA;AACA,GAAG;;AAEH,qBAAqB;;AAErB;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA","file":"game.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/index.js\");\n","var Clock = (function() {\n  function Clock(props) {\n    // reference to game object\n    SDK.Rectangle.call(this, props);\n    this.DANGER_COUNTDOWN_TIME = 5000;\n    this.isPaused = false;\n    this.isCountDown = true;\n    this.timerEl = document.getElementById(\"gameclock\");\n  }\n\n  Clock.prototype = Object.create(SDK.Rectangle.prototype);\n  Clock.prototype.constructor = Clock;\n\n  Clock.prototype.pause = function() {\n    this.isPaused = true;\n  };\n\n  Clock.prototype.play = function() {\n    this.isPaused = false;\n    this.currentTime = Date.now();\n  };\n\n  Clock.prototype.update = function() {\n    if (!this.isPaused) {\n      this.previousTime = this.currentTime;\n      this.currentTime = Date.now();\n      this.totalTime += this.currentTime - this.previousTime;\n    }\n  };\n\n  Clock.prototype.reset = function(timestamp) {\n    this.totalTime = 0;\n    this.currentTime = Date.now();\n    this.previousTime = this.currentTime;\n    this.countdownStart = timestamp || 0.5 * 60 * 1000; // ms;\n  };\n\n  Clock.prototype.getTimerText = function() {\n    var displayTime = new Date();\n    this.isCountDown\n      ? displayTime.setTime(Math.max(0, this.countdownStart - this.totalTime))\n      : displayTime.setTime(this.totalTime);\n    var milliseconds = displayTime.getMilliseconds();\n    var seconds = displayTime.getSeconds();\n    var minutes = displayTime.getMinutes();\n\n    return (\n      minutes.toString().padStart(2, \"0\") +\n      \":\" +\n      seconds.toString().padStart(2, \"0\") +\n      \":\" +\n      milliseconds\n        .toString()\n        .padStart(3, \"0\")\n        .substring(0, 2)\n    );\n  };\n\n  // update html element instead of drawing to the canvas\n  Clock.prototype.draw = function() {\n    var timerText = this.getTimerText();\n\n    if (this.timerEl.textContent !== timerText) {\n      if (\n        this.isCountDown &&\n        this.countdownStart - this.totalTime < this.DANGER_COUNTDOWN_TIME\n      ) {\n        this.timerEl.classList.add(\"danger\");\n      } else {\n        this.timerEl.classList.contains(\"danger\") &&\n          this.timerEl.classList.remove(\"danger\");\n      }\n      this.timerEl.innerHTML = timerText;\n    }\n  };\n\n  return Clock;\n})();\n\nmodule.exports = Clock;\n","var particleEmitters = require(\"./particleEmitters\");\nvar utils = require(\"../utils\");\n\nfunction CollisionManager(props) {\n  this.level = props.level;\n  this.clock = props.clock;\n  this.camera = props.camera;\n}\n\nCollisionManager.prototype.handleCollisions = function() {\n  this.handleCollisionsWithPlatforms();\n  this.handleCollisionsWithSkills();\n  this.handleCollisionsWithLasers();\n};\n\nCollisionManager.prototype.handleCollisionsWithLasers = function() {\n  var playerBox = this.level.player.getBoundingRect();\n  !this.level.player.shield.isOpen\n    ? this.level.lasers.forEach(function(laser, index) {\n        var laserBox = laser.getBoundingRect();\n        if (SDK.physics.collision.RectangleWithRectangle(playerBox, laserBox)) {\n          if (\n            playerBox.contains(laser.A.x, laser.A.y) ||\n            playerBox.contains(laser.B.x, laser.B.y) ||\n            SDK.physics.collision.segmentRectangle(\n              laser.A,\n              laser.B,\n              playerBox\n            ) < Number.POSITIVE_INFINITY\n          ) {\n            this.level.player.applyDamage(laser.damage);\n            this.level.player.hitPoints <= 0 && this.level.player.die();\n            this.level.particles.push(\n              particleEmitters.hitParticles(\n                laser.B.x,\n                laser.B.y,\n                SDK.Vector.subtract(laser.A, laser.B),\n                \"red\"\n              )\n            );\n            this.destroyLaser(index);\n          }\n        }\n      }, this)\n    : this.level.lasers.forEach(function(laser, index) {\n        if (this.level.player.shield.hasCollisionWithLaser(laser)) {\n          this.destroyLaser(index);\n        }\n      }, this);\n};\n\nCollisionManager.prototype.destroyLaser = function(index) {\n  this.level.lasers.splice(index, 1);\n};\n\n// player acquires skill, no collision to resolve, skills simply disappears\nCollisionManager.prototype.handleCollisionsWithSkills = function() {\n  var playerBox = this.level.player.getBoundingRect();\n  this.level.skills.forEach(function(skill, index) {\n    var skillBox = skill.getBoundingRect();\n    if (SDK.physics.collision.RectangleWithRectangle(playerBox, skillBox)) {\n      this.level.player.skills.push(skill);\n      this.clock.countdownStart += 5 * 1000; // add 5s to clock\n      this.level.skills.splice(index, 1);\n    }\n  }, this);\n};\n\nCollisionManager.prototype.getCollidablePlatformsInViewport = function() {\n  return this.level.platforms.filter(function(platform) {\n    var box = platform.getBoundingRect();\n    box.touched = false;\n    return box.overlaps(this.camera);\n  }, this);\n};\n\nCollisionManager.prototype.getCollisions = function(collidableGameObjects) {\n  var player = this.level.player;\n  var collisions = [];\n\n  // loop over each collidable object and store collision data\n  collidableGameObjects.forEach(function(box) {\n    var md = SDK.Rectangle.minkowskiDifference(box, player);\n    // window.md = md; // remove this when everything's working\n    var relMotion = SDK.Vector.subtract(player.v, box.v).scale(dt);\n    var colInfo = SDK.physics.collision.segmentRectangle(\n      new SDK.Vector(),\n      relMotion,\n      md\n    );\n    var t = colInfo.t;\n    var side = colInfo.side;\n\n    // create array of all collisions for that frame\n    if (t < Number.POSITIVE_INFINITY) {\n      var d = side[0] ? relMotion.x * side[0] : relMotion.y * side[1];\n      // If there is a collision along one of the axes,\n      // add collision to the array of collision characteristics\n      d > 0 &&\n        collisions.push({\n          side: side,\n          box: box,\n          d: d\n        });\n    }\n  });\n  return collisions;\n};\n\nCollisionManager.prototype.handleCollisionsWithPlatforms = function() {\n  var player = this.level.player;\n  var collidableWith = this.getCollidablePlatformsInViewport();\n  var collisions;\n  var boxH = null,\n    boxV = null;\n\n  // apply gravity acceleration and reset collisions\n  player.applyGravity();\n  player.isColliding = [0, 0];\n  collisions = this.getCollisions(collidableWith);\n\n  /**\n   * COLLISION RESOLUTION\n   **/\n\n  // determine FINAL COLLISION characteristics\n  var dH = 0,\n    dV = 0;\n  collisions.forEach(function(collision) {\n    var side = collision.side;\n    var d = collision.d;\n    var box = collision.box;\n\n    // die if player has double sided collision\n    if (\n      side[0] * player.isColliding[0] < 0 ||\n      side[1] * player.isColliding[1] < 0\n    ) {\n      player.die();\n      return;\n    }\n\n    // set player collisions [0, 1] + [-1, 0] -> [-1, 1]\n    if (box.solid) {\n      player.isColliding[0] = side[0] ? side[0] : player.isColliding[0];\n      if (box.passthrough) {\n        player.isColliding[1] =\n          side[1] * player.GRAVITY_ACCELERATION > 0\n            ? side[1]\n            : player.isColliding[1];\n      } else {\n        player.isColliding[1] = side[1] ? side[1] : player.isColliding[1];\n      }\n    }\n\n    // if new value of d is greater than the old one then the new box is the one in contact with the player\n    if (side[0]) {\n      if (d > dH) {\n        dH = d;\n        boxH = box;\n      }\n    } else if (side[1]) {\n      if (d > dV) {\n        dV = d;\n        boxV = box;\n      }\n    }\n  });\n\n  // resolve horizontal collision\n  if (player.isColliding[0]) {\n    player.x =\n      player.isColliding[0] > 0\n        ? utils.toFixedPrecision(boxH.left + boxH.v.x * dt - player.width, 2) // snap\n        : utils.toFixedPrecision(boxH.right + boxH.v.x * dt, 2);\n  }\n  // resolve vertical collision\n  if (player.isColliding[1]) {\n    player.y =\n      player.isColliding[1] > 0\n        ? utils.toFixedPrecision(boxV.top + boxV.v.y * dt - player.height, 2)\n        : utils.toFixedPrecision(boxV.bottom + boxV.v.y * dt, 2);\n  }\n\n  // inform the player about which objects it's colliding with\n  player.collidingWith = [boxH, boxV];\n  if (boxH) {\n    boxH.touched = true;\n  }\n  if (boxV) {\n    boxV.touched = true;\n  }\n};\n\nmodule.exports = CollisionManager;\n","var Laser = require(\"./laser\");\n\nvar Ennemy = (function() {\n  function Ennemy(x, y) {\n    SDK.Circle.call(this, x, y, 10);\n\n    this.v = new SDK.Vector();\n    this.solid = false;\n    this.damage = 5; // damage the ennemy's attack inflicts\n    this.fireDelay = 500; // number of ms between two ennemy attacks\n    this.visionRange = 300;\n    this.attackRange = 500;\n    this.lasers = [];\n    this.lastFiredAt = Number.NEGATIVE_INFINITY;\n  }\n\n  Ennemy.prototype = Object.create(SDK.Circle.prototype);\n  Ennemy.prototype.constructor = Ennemy;\n\n  Ennemy.prototype.attack = function(direction) {\n    var center = this.center;\n    this.lastFiredAt = Date.now();\n    return new Laser({\n      x: center.x,\n      y: center.y,\n      direction: direction,\n      damage: this.damage,\n      range: this.attackRange,\n      color: \"lightgrey\"\n    });\n  };\n\n  Ennemy.prototype.update = function() {};\n\n  Ennemy.prototype.updateVelocity = function() {};\n\n  Ennemy.prototype.draw = function(ctx, camera) {\n    ctx.save();\n    ctx.fillStyle = \"red\";\n    ctx.beginPath();\n    ctx.arc(\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.r),\n      0,\n      Math.PI * 2\n    );\n    ctx.fill();\n    ctx.restore();\n  };\n\n  return Ennemy;\n})();\n\nmodule.exports = Ennemy;\n","var GameMenu = require(\"./gameMenu\");\nvar CollisionManager = require(\"./collisionManager\");\nvar LevelManager = require(\"./levelManager\");\nvar LifeBar = require(\"./lifebar\");\nvar SkillBar = require(\"./skillBar\");\nvar Ghost = require(\"./ghost\");\nvar Clock = require(\"./clock\");\nvar utils = require(\"../utils\");\nwindow.gameData = require(\"./gameData.json\");\n\nvar Game = (function() {\n  function Game(config) {\n    // config\n    if (config) {\n      this.shouldDisplayDebug = config.shouldDisplayDebug || false;\n      this.shouldDisplayRulers =\n        config.shouldDisplayRulers !== undefined\n          ? config.shouldDisplayRulers\n          : true;\n    }\n\n    // initalize canvas(es) and html elements\n    this.canvas = document.getElementById(\"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\");\n\n    // game menu\n    this.gameMenu = new GameMenu({ game: this });\n\n    // initial game state\n    this.state = Game.states.PAUSED;\n\n    // initialize keyboard & sound\n    this.keyboard = new SDK.KeyboardManager(this);\n    this.touchInput = new SDK.TouchManager(this);\n    this.soundManager = new SDK.SoundManager(gameData);\n\n    // initialize level manager\n    this.levelManager = new LevelManager({ data: gameData, app: this });\n    this.currentLevelName = \"level 1\";\n\n    // camera\n    this.camera = new SDK.Camera({\n      canvas: this.canvas\n    });\n\n    // grid\n    this.grid = new SDK.Grid({\n      options: {\n        isGame: true,\n        shouldDisplayRulers: this.shouldDisplayRulers\n      },\n      canvas: this.canvas,\n      camera: this.camera,\n      mouse: this.mouse\n    });\n\n    // ghost\n    this.ghost = new Ghost();\n\n    // game timer (game inner logic)\n    this.timer = new SDK.GameTimer();\n\n    this.clock = new Clock({\n      x: canvas.width - 170,\n      y: 35,\n      width: 80,\n      height: 30\n    });\n  }\n\n  Game.states = {\n    PAUSED: \"paused\",\n    RUNNING: \"running\",\n    GAME_OVER: \"game over\",\n    VICTORY: \"victory\",\n    EXIT: 0\n  };\n\n  Game.prototype.loadGameDataFromLocalStorage = function() {\n    var savedData = localStorage.getItem(\"gameData\");\n    if (savedData) {\n      gameData = JSON.parse(savedData);\n    }\n  };\n\n  Game.prototype.preload = function() {\n    var args = Array.prototype.slice.call(arguments);\n    var remainingCount = 0;\n    var images;\n    var lastArgument = args[args.length - 1];\n\n    if (typeof lastArgument === \"function\") {\n      done = lastArgument;\n      remainingCount = args.length - 1;\n      images = args.slice(0, args.length - 1);\n    } else {\n      remainingCount = args.length;\n      images = args;\n    }\n\n    this.images = {};\n\n    for (var i = 0; i < images.length; i++) {\n      var name = args[i].name;\n      var source = args[i].source;\n\n      this.images[name] = new Image();\n      this.images[name].src = source;\n      this.images[name].onload = function() {\n        remainingCount--;\n\n        if (remainingCount === 0) {\n          done();\n        }\n      };\n    }\n  };\n\n  Game.prototype.handleKeyboard = function() {\n    var keyboard = this.keyboard;\n    var touchInput = this.touchInput;\n    var player = this.level.player;\n\n    // do not handle keyboard if player is dead\n    if (player.isDead) {\n      return;\n    }\n\n    player.v.y =\n      player.isColliding[1] * player.GRAVITY_ACCELERATION > 0\n        ? player.collidingWith[1].v.y\n        : player.v.y;\n\n    // player controls\n    if (\n      keyboard.RIGHT ||\n      keyboard.LEFT ||\n      touchInput.JOYPAD_RIGHT ||\n      touchInput.JOYPAD_LEFT\n    ) {\n      (keyboard.LEFT || touchInput.JOYPAD_LEFT) && player.moveLeft();\n      (keyboard.RIGHT || touchInput.JOYPAD_RIGHT) && player.moveRight();\n    } else {\n      player.v.x =\n        player.isColliding[1] * player.GRAVITY_ACCELERATION > 0\n          ? player.collidingWith[1].v.x\n          : 0;\n      player.v.x = player.isColliding[0]\n        ? player.collidingWith[0].v.x\n        : player.v.x;\n    }\n\n    if (keyboard.DOWN || touchInput.JOYPAD_DOWN) {\n      player.GRAVITY_ACCELERATION > 0 ? player.crouch() : player.jump();\n    } else {\n      player.stand();\n    }\n\n    if (keyboard.UP || touchInput.JOYPAD_UP) {\n      player.GRAVITY_ACCELERATION > 0 ? player.jump() : player.crouch();\n    }\n\n    if (keyboard.SPACE || touchInput.BUTTON_A) {\n      player.jump();\n    }\n\n    if (keyboard.ENTER || touchInput.BUTTON_B) {\n      if (!player.shield.isAnimating) {\n        player.shield.isOpen ? player.shield.close() : player.shield.open();\n      }\n    }\n\n    // camera controls\n    if (keyboard.EQUAL) {\n      this.camera.zoomIn();\n    }\n\n    if (keyboard.MINUS) {\n      this.camera.zoomOut();\n    }\n  };\n\n  Game.prototype.update = function() {\n    if (this.state === Game.states.RUNNING) {\n      this.handleKeyboard();\n      this.runPhysics();\n    }\n\n    if (this.state === Game.states.PAUSED) {\n      this.camera.updateDimensions();\n      return;\n    }\n\n    var player = this.level.player;\n\n    // ghost\n    this.ghost.update();\n\n    // ennemies fire new lasers\n    !player.isDead &&\n      this.level.ennemies.forEach(function(ennemy) {\n        var distanceVector = SDK.Vector.subtract(player.center, ennemy.center);\n        if (\n          distanceVector.normSquared < Math.pow(ennemy.visionRange, 2) &&\n          Date.now() - ennemy.lastFiredAt > ennemy.fireDelay\n        ) {\n          var direction = distanceVector.getUnitVector();\n          this.level.lasers.push(ennemy.attack(direction));\n        }\n      }, this);\n\n    // lasers\n    this.level.lasers.forEach(function(laser, index) {\n      if (laser.hasReachedMaxRange()) {\n        this.collisionManager.destroyLaser(index);\n      } else {\n        laser.update();\n      }\n    }, this);\n\n    // shield\n    player.shield.update();\n\n    // platforms\n    this.level.platforms.forEach(function(platform) {\n      platform.update();\n    });\n\n    // player\n    player.update();\n\n    // particles\n    this.level.particles.forEach(function(particle, index) {\n      if (Date.now() - particle.createdAt > particle.maxLife) {\n        this.level.particles.splice(index, 1);\n      } else {\n        particle.update();\n      }\n    }, this);\n\n    // kill player if they move outside of the world boundaries\n    if (!player.isDead) {\n      if (\n        !player.within(this.level.worldRect) ||\n        this.clock.countdownStart - this.clock.totalTime <= 0\n      ) {\n        player.die();\n      }\n    }\n\n    this.camera.update();\n    if (\n      this.state !== Game.states.GAME_OVER &&\n      this.state !== Game.states.VICTORY\n    ) {\n      this.clock.update();\n      this.checkVictory();\n      this.checkDefeat();\n    }\n  };\n\n  Game.prototype.setBackground = function(path) {\n    this.canvas.style.backgroundImage = \"url(\" + path + \")\";\n    this.canvas.backgroundSize = canvas.width + \"px \" + canvas.height + \"px\";\n  };\n\n  Game.prototype.pauseLoop = function() {\n    this.frame && cancelAnimationFrame(this.frame);\n    this.frame = null;\n  };\n\n  Game.prototype.exit = function() {\n    this.pauseLoop();\n    this.gameMenu.close();\n    utils.hide(this.gameMenu.gameContainerEl);\n    this.state = Game.states.EXIT;\n    this.keyboard.unbindEventHandlers();\n    this.touchInput.unbindEventHandlers();\n    delete game;\n  };\n\n  Game.prototype.pause = function() {\n    if (\n      this.state !== Game.states.GAME_OVER &&\n      this.state !== Game.states.VICTORY\n    ) {\n      !this.gameMenuEl && this.gameMenu.showPauseMenu();\n      this.clock.pause();\n      this.soundManager.pauseAll();\n      this.state = Game.states.PAUSED;\n    }\n  };\n\n  Game.prototype.unpause = function() {\n    this.state !== Game.states.GAME_OVER &&\n      this.state !== Game.states.VICTORY &&\n      this.gameMenu.close();\n    this.clock.play();\n    this.soundManager.playPaused();\n    this.state = Game.states.RUNNING;\n  };\n\n  Game.prototype.displaySplash = function() {\n    var splash = document.getElementById(\"splash\");\n    splash.classList.remove(\"hidden\");\n  };\n\n  Game.prototype.hideSplash = function() {\n    var splash = document.getElementById(\"splash\");\n    splash.classList.add(\"hidden\");\n  };\n\n  Game.prototype.start = function() {\n    this.displaySplash();\n    setTimeout(\n      function() {\n        this.preload(\n          { name: \"htmlLogo\", source: \"assets/images/html-5-icon.png\" },\n          { name: \"cssLogo\", source: \"assets/images/css-3-icon.png\" },\n          { name: \"bootstrapLogo\", source: \"assets/images/bootstrap-logo.png\" },\n          { name: \"jqueryLogo\", source: \"assets/images/jquery-logo.png\" },\n          { name: \"sassLogo\", source: \"assets/images/sass-logo.png\" },\n          { name: \"nodeLogo\", source: \"assets/images/nodejs-logo.png\" },\n          { name: \"angularLogo\", source: \"assets/images/angular-logo.svg\" },\n          { name: \"reactLogo\", source: \"assets/images/react-logo.png\" },\n          { name: \"mongoLogo\", source: \"assets/images/mongodb-logo.png\" },\n          { name: \"meteorLogo\", source: \"assets/images/meteor-logo.png\" },\n          {\n            name: \"background\",\n            source: \"assets/images/background_2000_stars.png\"\n          },\n          {\n            name: \"smoke\",\n            source: \"assets/images/smoke2.png\"\n          },\n          function() {\n            this.hideSplash();\n            this.pause();\n            this.loadGameDataFromLocalStorage();\n            this.init();\n            this.step();\n          }.bind(this)\n        );\n      }.bind(this),\n      1500\n    );\n  };\n\n  Game.prototype.restart = function() {\n    this.gameMenu.close();\n    this.unpause();\n\n    this.init();\n    this.step();\n  };\n\n  Game.prototype.init = function() {\n    this.level = this.levelManager.buildLevel(this.currentLevelName);\n    this.clock.reset(this.level.countdownStart);\n    this.timer.reset();\n    this.levelManager.buildEntities();\n    this.collisionManager = new CollisionManager({\n      level: this.level,\n      clock: this.clock,\n      camera: this.camera\n    });\n    this.ghost.init({\n      clock: this.clock,\n      player: this.level.player\n    });\n    this.setBackground(\"./assets/images/background_2000_stars.png\");\n    this.camera.follow(\n      this.level.player,\n      (this.canvas.width - this.level.player.width) / 2 - 10,\n      (this.canvas.height - this.level.player.height) / 2 - 10\n    );\n    this.lifeBar = new LifeBar({\n      x: 60,\n      y: 40,\n      width: 200,\n      height: 15,\n      gameObject: this.level.player\n    });\n    this.skillBar = new SkillBar({\n      player: this.level.player,\n      skills: this.level.skills\n    });\n\n    this.pauseLoop();\n  };\n\n  Game.prototype.step = function() {\n    this.timer.update();\n    dt = this.timer.dt;\n\n    this.update();\n    this.render(this.ctx, this.camera);\n\n    this.frame = requestAnimationFrame(this.step.bind(this));\n  };\n\n  Game.prototype.runPhysics = function() {\n    this.collisionManager.handleCollisions();\n  };\n\n  Game.prototype.checkVictory = function() {\n    if (\n      this.level.skills.length <= 0 &&\n      !(this.state === Game.states.GAME_OVER)\n    ) {\n      this.clock.pause();\n      this.state = Game.states.VICTORY;\n      this.level.player.v = new SDK.Vector(); // stop player\n      setTimeout(\n        function() {\n          this.gameMenu.showVictoryMenu();\n        }.bind(this),\n        1000\n      );\n    }\n  };\n\n  Game.prototype.checkDefeat = function() {\n    if (this.level.player.isDead && !(this.state === Game.states.GAME_OVER)) {\n      this.clock.pause();\n      this.state = Game.states.GAME_OVER;\n      setTimeout(\n        function() {\n          this.gameMenu.showGameOverMenu();\n        }.bind(this),\n        1500\n      );\n    }\n  };\n\n  // rendering\n  Game.prototype.render = function(ctx, camera) {\n    this.clearCanvas(ctx);\n    this.renderBackground(ctx, camera);\n    this.renderScene(ctx, camera);\n    this.renderUI(ctx, camera);\n  };\n\n  Game.prototype.clearCanvas = function(ctx) {\n    ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  };\n\n  Game.prototype.renderBackground = function(ctx, camera) {\n    this.canvas.style.backgroundPosition =\n      -camera.x * 0.502 + \"px \" + -camera.y * 0.502 + \"px\";\n  };\n\n  Game.prototype.renderScene = function(ctx, camera) {\n    this.levelManager.buildEntities([this.ghost].concat(this.level.particles));\n\n    // only draw objects in the viewport\n    this.level.entities.forEach(function(entity) {\n      entity.draw(ctx, camera);\n    });\n  };\n\n  Game.prototype.renderUI = function(ctx, camera) {\n    this.uiElements = [\n      // this.lifeBar,\n      this.clock,\n      this.grid,\n      this.skillBar\n    ];\n\n    // UI\n    this.uiElements.forEach(function(uiElement) {\n      uiElement.draw(ctx, camera);\n    });\n  };\n\n  // debug display\n  Game.prototype.updateDebugInfo = function() {\n    var uiContainerEl = document.getElementById(\"ui-container\");\n    var debugEl = utils.h(\n      \"div\",\n      { class: \"debug\" },\n      utils.h(\"h2\", null, \"debug info\"),\n      utils.h(\n        \"section\",\n        { class: \"player\" },\n        utils.h(\n          \"p\",\n          null,\n          utils.h(\"strong\", null, \"x: \"),\n          this.level.player.x,\n          utils.h(\"br\"),\n          utils.h(\"strong\", null, \" y: \"),\n          this.level.player.y\n        ),\n        utils.h(\n          \"p\",\n          null,\n          utils.h(\"strong\", null, \"width: \"),\n          this.level.player.width,\n          utils.h(\"br\"),\n          utils.h(\"strong\", null, \" height: \"),\n          this.level.player.height\n        ),\n        utils.h(\n          \"p\",\n          null,\n          utils.h(\"strong\", null, \"crouching: \"),\n          this.level.player.isCrouching\n        ),\n        utils.h(\n          \"p\",\n          null,\n          utils.h(\"strong\", null, \"speedX: \"),\n          this.level.player.v.x,\n          utils.h(\"br\"),\n          utils.h(\"strong\", null, \" speedY: \"),\n          this.level.player.v.y\n        ),\n        utils.h(\n          \"p\",\n          null,\n          utils.h(\"strong\", null, \"accelX: \"),\n          this.level.player.acceleration.x,\n          utils.h(\"strong\", null, \" accelY: \"),\n          this.level.player.acceleration.y\n        ),\n        utils.h(\n          \"p\",\n          null,\n          utils.h(\"strong\", null, \"colliding: \"),\n          this.level.player.isColliding\n        )\n      ),\n      utils.h(\n        \"section\",\n        { class: \"camera\" },\n        utils.h(\"p\", null, [utils.h(\"strong\", null, \"camX: \"), this.camera.x]),\n        utils.h(\"p\", null, [utils.h(\"strong\", null, \"camY: \"), this.camera.y])\n      )\n    );\n\n    uiContainerEl.appendChild(utils.render(debugEl));\n  };\n\n  return Game;\n})();\n\nmodule.exports = Game;\n","var utils = require(\"../utils\");\n\nfunction GameMenu(props) {\n  this.game = props.game;\n\n  this.gameContainerEl = document.getElementById(\"game-container\");\n  this.uiContainerEl = document.getElementById(\"ui-container\");\n  this.gameIntroEl = document.getElementById(\"game-intro\");\n\n  // MENU BUTTONS\n  this.resumeButtonVNode = utils.h(\n    \"li\",\n    {\n      class: \"game-menu__item\"\n    },\n    utils.h(\n      \"a\",\n      {\n        href: \"\",\n        class: \"game-menu__link\",\n        onclick: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          document.documentElement.requestFullscreen &&\n            document.documentElement.requestFullscreen();\n          this.game.unpause();\n        }.bind(this),\n        onkeyup: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          if (event.keyCode === 13) {\n            event.target.click();\n          }\n        }\n      },\n      \"REPRENDRE\"\n    )\n  );\n\n  this.restartButtonVNode = utils.h(\n    \"li\",\n    {\n      class: \"game-menu__item\"\n    },\n    utils.h(\n      \"a\",\n      {\n        href: \"\",\n        class: \"game-menu__link\",\n        onclick: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          document.documentElement.requestFullscreen &&\n            document.documentElement.requestFullscreen();\n          this.game.restart();\n        }.bind(this),\n        onkeyup: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          if (event.keyCode === 13) {\n            event.target.click();\n          }\n        }\n      },\n      \"RECOMMENCER\"\n    )\n  );\n\n  this.controlsButtonVNode = utils.h(\n    \"li\",\n    {\n      class: \"game-menu__item\"\n    },\n    utils.h(\n      \"a\",\n      {\n        href: \"\",\n        class: \"game-menu__link\",\n        onclick: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          this.showControlsMenu();\n        }.bind(this),\n        onkeyup: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          if (event.keyCode === 13) {\n            event.target.click();\n          }\n        }\n      },\n      \"CONTRÔLES\"\n    )\n  );\n\n  this.aboutButtonVNode = utils.h(\n    \"li\",\n    {\n      class: \"game-menu__item\"\n    },\n    utils.h(\n      \"a\",\n      {\n        href: \"\",\n        class: \"game-menu__link\",\n        onclick: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          this.showAboutMenu();\n        }.bind(this),\n        onkeyup: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          if (event.keyCode === 13) {\n            event.target.click();\n          }\n        }\n      },\n      \"À PROPOS\"\n    )\n  );\n\n  this.backButtonVNode = utils.h(\n    \"li\",\n    {\n      class: \"game-menu__item\"\n    },\n    utils.h(\n      \"a\",\n      {\n        href: \"\",\n        class: \"game-menu__link\",\n        onclick: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          this.game.state === this.game.constructor.states.PAUSED &&\n            this.showPauseMenu();\n          this.game.state === this.game.constructor.states.VICTORY &&\n            this.showVictoryMenu();\n          this.game.state === this.game.constructor.states.GAME_OVER &&\n            this.showGameOverMenu();\n        }.bind(this),\n        onkeyup: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          if (event.keyCode === 13) {\n            event.target.click();\n          }\n        }\n      },\n      \"RETOUR\"\n    )\n  );\n\n  this.loadButtonVNode = utils.h(\n    \"li\",\n    {\n      class: \"game-menu__item\"\n    },\n    utils.h(\n      \"a\",\n      {\n        href: \"\",\n        class: \"game-menu__link\",\n        onclick: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          this.showLoadMenu();\n        }.bind(this),\n        onkeyup: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          if (event.keyCode === 13) {\n            event.target.click();\n          }\n        }\n      },\n      \"CHARGER UN NIVEAU\"\n    )\n  );\n\n  this.editorButtonVNode = utils.h(\n    \"li\",\n    { class: \"game-menu__item\" },\n    utils.h(\n      \"a\",\n      { href: \"./level-editor.html\", class: \"game-menu__link\" },\n      \"OUVRIR L'ÉDITEUR\"\n    )\n  );\n\n  this.exitButtonVNode = utils.h(\n    \"li\",\n    {\n      class: \"game-menu__item\"\n    },\n    utils.h(\n      \"a\",\n      {\n        href: \"\",\n        class: \"game-menu__link\",\n        onclick: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          document.exitFullscreen =\n            document.exitFullscreen ||\n            document.webkitExitFullscreen ||\n            document.mozCancelFullScreen ||\n            document.msExitFullscreen;\n\n          document.exitFullscreen && document.exitFullscreen();\n\n          this.game.exit();\n        }.bind(this),\n        onkeyup: function(event) {\n          event.preventDefault\n            ? event.preventDefault()\n            : (event.returnValue = false);\n          if (event.keyCode === 13) {\n            event.target.click();\n          }\n        }\n      },\n      \"QUITTER LE JEU\"\n    )\n  );\n}\n\nGameMenu.prototype.showMenu = function(vNode) {\n  this.close();\n  this.uiContainerEl.appendChild(utils.render(vNode));\n};\n\nGameMenu.prototype.showGameOverMenu = function() {\n  this.showMenu(\n    utils.h(\n      \"div\",\n      { class: \"game-menu\" },\n      utils.h(\"h2\", null, \"PERDU !\"),\n      utils.h(\n        \"ul\",\n        { class: \"game-menu__list\" },\n        this.restartButtonVNode,\n        this.loadButtonVNode,\n        this.editorButtonVNode,\n        this.exitButtonVNode\n      )\n    )\n  );\n};\n\nGameMenu.prototype.showVictoryMenu = function() {\n  this.showMenu(\n    utils.h(\n      \"div\",\n      { class: \"game-menu\" },\n      utils.h(\"h2\", null, \"VICTOIRE !\"),\n      utils.h(\n        \"p\",\n        null,\n        \"Vous avez retrouvé toutes mes principales compétences, vous pouvez avoir plus d'infos en consultant mon cv détaillé \",\n        utils.h(\n          \"a\",\n          { href: \"./assets/files/CV Thomas Vandenhede.pdf\" },\n          \"ici\"\n        ),\n        \". Ou bien essayez de battre votre score.\"\n      ),\n      utils.h(\n        \"ul\",\n        { class: \"game-menu__list\" },\n        this.restartButtonVNode,\n        this.loadButtonVNode,\n        this.editorButtonVNode,\n        this.exitButtonVNode\n      )\n    )\n  );\n};\n\nGameMenu.prototype.showPauseMenu = function() {\n  this.showMenu(\n    utils.h(\n      \"div\",\n      { class: \"game-menu\" },\n      utils.h(\"h2\", null, \"JEU EN PAUSE\"),\n      utils.h(\n        \"ul\",\n        { class: \"game-menu__list\" },\n        this.resumeButtonVNode,\n        this.restartButtonVNode,\n        this.controlsButtonVNode,\n        this.loadButtonVNode,\n        this.editorButtonVNode,\n        this.aboutButtonVNode,\n        this.exitButtonVNode\n      )\n    )\n  );\n};\n\nGameMenu.prototype.showControlsMenu = function() {\n  this.showMenu(\n    utils.h(\n      \"div\",\n      { class: \"game-menu\" },\n      utils.h(\"h2\", null, \"CONTRÔLES\"),\n      utils.h(\n        \"ul\",\n        { class: \"game-menu__list\" },\n        utils.h(\n          \"div\",\n          { class: \"controls-container\" },\n          utils.h(\n            \"table\",\n            { class: \"controls\" },\n            utils.h(\n              \"tr\",\n              null,\n              utils.h(\n                \"th\",\n                null,\n                utils.h(\"span\", { class: \"kbd\" }, \"\\u2190\"),\n                \" / \",\n                utils.h(\"span\", { class: \"kbd\" }, \"\\u2192\"),\n                \" ou \",\n                utils.h(\"span\", { class: \"kbd\" }, \"Q\"),\n                \" / \",\n                utils.h(\"span\", { class: \"kbd\" }, \"D\")\n              ),\n              utils.h(\"td\", null, \"Se déplacer horizontalement\")\n            ),\n            utils.h(\n              \"tr\",\n              null,\n              utils.h(\n                \"th\",\n                null,\n                utils.h(\"span\", { class: \"kbd\" }, \"\\u2191\"),\n                \" ou \",\n                utils.h(\"span\", { class: \"kbd\" }, \"Espace\"),\n                \" ou \",\n                utils.h(\"span\", { class: \"kbd\" }, \"Z\")\n              ),\n              utils.h(\"td\", null, \"Sauter\")\n            ),\n            utils.h(\n              \"tr\",\n              null,\n              utils.h(\"th\", null, utils.h(\"span\", { class: \"kbd\" }, \"\\u21b2\")),\n              utils.h(\"td\", null, \"Ouvrir le bouclier\")\n            ),\n            utils.h(\n              \"tr\",\n              null,\n              utils.h(\"th\", null, utils.h(\"span\", { class: \"kbd\" }, \"Échap\")),\n              utils.h(\"td\", null, \"Afficher cet écran\")\n            ),\n            utils.h(\n              \"tr\",\n              null,\n              utils.h(\"th\", null, utils.h(\"span\", { class: \"kbd\" }, \"F11\")),\n              utils.h(\"td\", null, \"Plein écran\")\n            ),\n            utils.h(\n              \"tr\",\n              null,\n              utils.h(\n                \"th\",\n                null,\n                utils.h(\"span\", { class: \"kbd\" }, \"+\"),\n                \" / \",\n                utils.h(\"span\", { class: \"kbd\" }, \")\")\n              ),\n              utils.h(\"td\", null, \"Zoomer / Dézoomer\")\n            )\n          )\n        ),\n        this.backButtonVNode\n      )\n    )\n  );\n};\n\nGameMenu.prototype.showAboutMenu = function() {\n  this.showMenu(\n    utils.h(\n      \"div\",\n      { class: \"game-menu\" },\n      utils.h(\"h2\", null, \"À PROPOS\"),\n      utils.h(\n        \"p\",\n        null,\n        utils.h(\n          \"p\",\n          null,\n          \"Ce jeu est un projet que j'ai réalisé pour ma formation de Dev JS à l'Ifocop de Paris. Il a nécessité un bon mois de travail et pas mal de nuits blanches.\"\n        ),\n        utils.h(\n          \"p\",\n          null,\n          \"Le code est entièrement écrit en JavaScript, HTML et CSS et n'utilise aucun framework (hormis une touche de Bootstrap pour l'éditeur de niveaux).\"\n        )\n      ),\n      utils.h(\"ul\", { class: \"game-menu__list\" }, this.backButtonVNode)\n    )\n  );\n};\n\nGameMenu.prototype.showLoadMenu = function() {\n  this.showMenu(\n    utils.h(\n      \"div\",\n      { class: \"game-menu\" },\n      utils.h(\"h2\", null, \"CHARGER UN NIVEAU\"),\n      utils.h(\n        \"ul\",\n        { class: \"game-menu__list\" },\n        Object.keys(gameData.levels).map(\n          function(key) {\n            return utils.h(\n              \"li\",\n              null,\n              utils.h(\n                \"a\",\n                {\n                  href: \"\",\n                  onclick: function(event) {\n                    event.preventDefault\n                      ? event.preventDefault()\n                      : (event.returnValue = false);\n                    this.game.currentLevelName = gameData.levels[key].name;\n                    this.game.state = this.game.constructor.states.PAUSED;\n                    this.game.start();\n                  }.bind(this)\n                },\n                gameData.levels[key].name\n              )\n            );\n          }.bind(this)\n        )\n      ),\n      utils.h(\"ul\", { class: \"game-menu__list\" }, this.backButtonVNode)\n    )\n  );\n};\n\nGameMenu.prototype.close = function() {\n  var gameMenuEl = document.querySelector(\".game-menu\");\n  if (gameMenuEl) {\n    utils.emptyElement(gameMenuEl);\n    this.uiContainerEl.removeChild(gameMenuEl);\n  }\n};\n\nmodule.exports = GameMenu;\n","function Ghost() {}\n\nGhost.prototype.init = function(props) {\n  this.clock = props.clock;\n  this.player = props.player;\n  this.reset();\n};\n\nGhost.prototype.reset = function() {\n  this.ghostIndex = 0;\n  this.ghostPositions =\n    Array.isArray(this.ghostPositionsTemp) &&\n    this.ghostPositionsTemp.length !== 0\n      ? this.ghostPositionsTemp.slice(0)\n      : [];\n  this.ghostPositionsTemp = [];\n};\n\nGhost.prototype.update = function() {\n  // var totalTime = this.clock.totalTime;\n  // var ghostTimes = this.ghostPositions.map(function(position) {\n  //   return position.time;\n  // });\n  // var currentGhostTime = ghostTimes.find(function(time, index) {\n  //   return totalTime >= time && totalTime < ghostTimes[index + 1];\n  // });\n  // var ghostIndex = ghostTimes.indexOf(currentGhostTime);\n  // var nextGhostTime = ghostTimes[ghostIndex + 1];\n\n  // var timeRatio =\n  //   (totalTime - currentGhostTime) / (nextGhostTime - currentGhostTime);\n\n  // if (this.ghostPositions.length) {\n  //   this.ghost = {};\n  //   this.ghost.x =\n  //     this.ghostPositions[ghostIndex].x +\n  //     (this.ghostPositions[ghostIndex + 1].x -\n  //       this.ghostPositions[ghostIndex].x) *\n  //       timeRatio;\n  //   this.ghost.y =\n  //     this.ghostPositions[ghostIndex].y +\n  //     (this.ghostPositions[ghostIndex + 1].y -\n  //       this.ghostPositions[ghostIndex].y) *\n  //       timeRatio;\n  // } else {\n  //   this.ghost = null;\n  // }\n  this.ghost = this.ghostPositions.length\n    ? this.ghostPositions[this.ghostIndex]\n    : null;\n  this.ghostPositions[this.ghostIndex + 1] && this.ghostIndex++;\n\n  // store position for next ghost\n  this.ghostPositionsTemp.push({\n    time: this.clock.totalTime,\n    x: this.player.x,\n    y: this.player.y\n  });\n};\n\nGhost.prototype.draw = function(ctx, camera) {\n  if (this.ghost) {\n    ctx.save();\n    ctx.fillStyle = \"rgba(180, 180, 180, 0.7)\";\n    ctx.fillRect(\n      camera.applyToX(this.ghost.x),\n      camera.applyToY(this.ghost.y),\n      camera.applyToDistance(this.player.width),\n      camera.applyToDistance(this.player.height)\n    );\n    if (!this.ghostPositions[this.ghostIndex + 1]) {\n      ctx.strokeStyle = \"black\";\n      ctx.beginPath();\n      ctx.moveTo(camera.applyToX(this.ghost.x), camera.applyToY(this.ghost.y));\n      ctx.lineTo(\n        camera.applyToX(this.ghost.x + this.player.width),\n        camera.applyToY(this.ghost.y + this.player.height)\n      );\n      ctx.moveTo(\n        camera.applyToX(this.ghost.x + this.player.width),\n        camera.applyToY(this.ghost.y)\n      );\n      ctx.lineTo(\n        camera.applyToX(this.ghost.x),\n        camera.applyToY(this.ghost.y + this.player.height)\n      );\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n};\n\nmodule.exports = Ghost;\n","var Laser = (function() {\n  function Laser(props) {\n    this.length = 20;\n    var A = new SDK.Vector(props.x, props.y);\n    var B = SDK.Vector.sum(A, props.direction.scale(this.length));\n    SDK.Segment.call(this, A, B);\n\n    this.origin = new SDK.Vector(props.x, props.y);\n    this.speed = 250;\n    this.v = SDK.Vector.subtract(B, A)\n      .getUnitVector()\n      .scale(this.speed);\n\n    // stats\n    this.damage = props.damage;\n\n    // timings\n    this.createdAt = Date.now();\n    this.range = props.range;\n\n    this.color = props.color;\n  }\n\n  Laser.prototype = Object.create(SDK.Segment.prototype);\n  Laser.prototype.constructor = Laser;\n\n  Laser.prototype.hasReachedMaxRange = function() {\n    return (\n      SDK.Vector.subtract(this.B, this.origin).normSquared >=\n      Math.pow(this.range, 2)\n    );\n  };\n\n  Laser.prototype.update = function() {\n    var dPos = this.v.scale(dt);\n    this.A = SDK.Vector.sum(this.A, dPos);\n    this.B = SDK.Vector.sum(this.B, dPos);\n  };\n\n  Laser.prototype.draw = function(ctx, camera) {\n    var lineWidth = 3;\n    ctx.save();\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(this.A.x), camera.applyToY(this.A.y));\n    ctx.lineTo(camera.applyToX(this.B.x), camera.applyToY(this.B.y));\n    ctx.stroke();\n    ctx.restore();\n  };\n\n  return Laser;\n})();\n\nmodule.exports = Laser;\n","var Player = require(\"./player\");\nvar Player = require(\"./player\");\nvar Ennemy = require(\"./ennemy\");\nvar Platform = require(\"./platform\");\nvar MovingPlatform = require(\"./movingPlatform\");\nvar skills = require(\"./skills\");\nvar SkillHtml = skills.SkillHtml;\nvar SkillCss = skills.SkillCss;\nvar SkillSass = skills.SkillSass;\nvar SkillBootstrap = skills.SkillBootstrap;\nvar SkillReact = skills.SkillReact;\nvar SkillAngular = skills.SkillAngular;\nvar SkillJquery = skills.SkillJquery;\nvar SkillNode = skills.SkillNode;\nvar SkillMongo = skills.SkillMongo;\nvar SkillMeteor = skills.SkillMeteor;\n\nvar LevelManager = (function() {\n  var level = {};\n\n  var gameEntityConstructors = {\n    Player: Player,\n    Ennemy: Ennemy,\n    Platform: Platform,\n    MovingPlatform: MovingPlatform,\n    SkillHtml: SkillHtml,\n    SkillCss: SkillCss,\n    SkillSass: SkillSass,\n    SkillBootstrap: SkillBootstrap,\n    SkillReact: SkillReact,\n    SkillAngular: SkillAngular,\n    SkillJquery: SkillJquery,\n    SkillNode: SkillNode,\n    SkillMongo: SkillMongo,\n    SkillMeteor: SkillMeteor\n  };\n\n  function LevelManager(props) {\n    this.data = props.data;\n    this.app = props.app;\n  }\n\n  LevelManager.prototype.buildLevel = function(name) {\n    if (!gameData.levels[name]) {\n      return null;\n    }\n    var levelData = gameData.levels[name];\n    var name = levelData.name;\n    var worldRectData = levelData.worldRect;\n    var playerData = levelData.player;\n    var platformsData = levelData.platforms;\n    var ennemiesData = levelData.ennemies;\n    var skillsData = levelData.skills;\n\n    level.name = name;\n    level.countdownStart = levelData.countdownStart;\n    level.worldRect = new SDK.Rectangle({\n      x: worldRectData.props.x,\n      y: worldRectData.props.y,\n      width: worldRectData.props.width,\n      height: worldRectData.props.height\n    });\n    level.player = new gameEntityConstructors[playerData.type](\n      playerData.props\n    );\n    level.platforms = [];\n    platformsData.forEach(function(platform) {\n      level.platforms.push(\n        new gameEntityConstructors[platform.type](platform.props)\n      );\n    });\n    level.ennemies = [];\n    ennemiesData.forEach(function(ennemy) {\n      level.ennemies.push(\n        new gameEntityConstructors[ennemy.type](ennemy.props.x, ennemy.props.y)\n      );\n    });\n    level.skills = [];\n    skillsData.forEach(function(skill) {\n      level.skills.push(new gameEntityConstructors[skill.type](skill.props));\n    });\n\n    // temporary objects\n    level.lasers = [];\n    level.particles = [];\n\n    return level;\n  };\n\n  /**\n   * Put all level entities inside a single array.\n   * @param {Array} extra\n   */\n  LevelManager.prototype.buildEntities = function(extra) {\n    level.entities = []\n      .concat(level.platforms)\n      .concat(level.skills)\n      .concat(level.ennemies)\n      .concat(level.lasers)\n      .concat([level.player]);\n\n    if (extra) {\n      level.entities = level.entities.concat(extra);\n    }\n  };\n\n  LevelManager.prototype.deleteLevel = function(name) {\n    delete gameData.levels[name];\n  };\n\n  return LevelManager;\n})();\n\nmodule.exports = LevelManager;\n","var LifeBar = (function() {\n  function LifeBar(props) {\n    SDK.Rectangle.call(this, props);\n    this.gameObject = props.gameObject;\n  }\n\n  LifeBar.prototype = Object.create(SDK.Rectangle.prototype);\n  LifeBar.prototype.constructor = LifeBar;\n\n  LifeBar.prototype.draw = function(ctx) {\n    var hitPointsRation = this.gameObject.getHitPointsRatio();\n    var lineWidth = 1;\n\n    ctx.save();\n    // life bar background\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n\n    // life bar hit points\n    ctx.fillStyle = \"hsl(\" + hitPointsRation * 120 + \", 100%, 40%)\";\n    ctx.fillRect(this.x, this.y, this.width * hitPointsRation, this.height);\n\n    // life bar outline\n    ctx.strokeStyle = \"white\";\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.strokeRect(\n      this.x - lineWidth / 2,\n      this.y - lineWidth / 2,\n      this.width + lineWidth,\n      this.height + lineWidth\n    );\n\n    ctx.fillStyle = \"white\";\n    ctx.font = \"bold 16px sans-serif\";\n    ctx.textAlign = \"center\";\n    ctx.fontWeight = \"bold\";\n    ctx.fillText(\n      Math.ceil(utils.toFixedPrecision(hitPointsRation * 100)) + \"%\",\n      this.x + this.width / 2,\n      this.y + this.height + 20\n    );\n    ctx.restore();\n  };\n\n  return LifeBar;\n})();\n\nmodule.exports = LifeBar;\n","var Platform = require(\"./platform\");\nvar utils = require('../utils');\n\nvar MovingPlatform = (function() {\n  function MovingPlatform(props) {\n    Platform.call(this, props);\n\n    this.xStart = props.x !== undefined ? props.x : 0;\n    this.yStart = props.x !== undefined ? props.y : 0;\n    this.xEnd = props.xEnd !== undefined ? props.xEnd : this.xStart;\n    this.yEnd = props.yEnd !== undefined ? props.yEnd : this.yStart;\n\n    this.speed = props.speed || 50;\n    this.v = new SDK.Vector(this.xEnd - this.x, this.yEnd - this.y);\n    var vNorm = this.v.norm;\n    this.v = this.v.scale(this.speed / vNorm);\n\n    this.color = \"rgb(0, 100, 255)\";\n    this.color = \"darkorange\";\n  }\n\n  MovingPlatform.prototype = Object.create(Platform.prototype);\n  MovingPlatform.prototype.constructor = MovingPlatform;\n\n  MovingPlatform.prototype.updateVelocity = function() {\n    // // horizontal velocity\n    // if (\n    //   this.v.x > 0 &&\n    //   ((this.xEnd - this.xStart) * (this.xEnd - this.x) < 0 ||\n    //     (this.xEnd - this.xStart) * (this.x - this.xStart) < 0)\n    // ) {\n    //   this.v.x = -Math.abs(this.v.x);\n    // } else if (\n    //   this.v.x < 0 &&\n    //   ((this.xEnd - this.xStart) * (this.xEnd - this.x) < 0 ||\n    //     (this.xEnd - this.xStart) * (this.x - this.xStart) < 0)\n    // ) {\n    //   this.v.x = Math.abs(this.v.x);\n    // }\n    // // vertical velocity\n    // if (\n    //   this.v.y > 0 &&\n    //   ((this.yEnd - this.yStart) * (this.yEnd - this.y) < 0 ||\n    //     (this.yEnd - this.yStart) * (this.y - this.yStart) < 0)\n    // ) {\n    //   this.v.y = -Math.abs(this.v.y);\n    // } else if (\n    //   this.v.y < 0 &&\n    //   ((this.yEnd - this.yStart) * (this.yEnd - this.y) < 0 ||\n    //     (this.yEnd - this.yStart) * (this.y - this.yStart) < 0)\n    // ) {\n    //   this.v.y = Math.abs(this.v.y);\n    // }\n  };\n\n  MovingPlatform.prototype.update = function() {\n    var dx = this.v.x * dt;\n    var dy = this.v.y * dt;\n    if (this.x + dx > this.xEnd || this.y + dy > this.yEnd) {\n      this.v.x = -Math.abs(this.v.x);\n      this.v.y = -Math.abs(this.v.y);\n    }\n    if (this.x + dx < this.xStart || this.y + dy < this.yStart) {\n      this.v.x = Math.abs(this.v.x);\n      this.v.y = Math.abs(this.v.y);\n    }\n\n    this.x = utils.toFixedPrecision(this.x + dx, 2);\n    this.y = utils.toFixedPrecision(this.y + dy, 2);\n  };\n\n  return MovingPlatform;\n})();\n\nmodule.exports = MovingPlatform;\n","var SmokeParticle = require(\"./smokeParticle\");\nvar utils = require('../utils');\n\nvar sparksParticles = function(gameObj) {\n  var start = Date.now();\n\n  return {\n    particleIndex: 0,\n    particles: {},\n    minSpeed: 5,\n    maxSpeed: 20,\n    size: 10,\n    maxLife: 2000,\n    duration: 200,\n    addNewParticle: function() {\n      this.particleIndex++;\n      var color = !gameObj.hasWon\n        ? gameObj.color\n        : \"rgb(\" +\n          utils.randInt(0, 255) +\n          \", \" +\n          utils.randInt(0, 255) +\n          \", \" +\n          utils.randInt(0, 255) +\n          \")\";\n      switch (utils.randInt(0, 3)) {\n        case 0:\n          // top edge\n          particle = new SmokeParticle({\n            x: utils.randInt(gameObj.left, gameObj.right),\n            y: gameObj.top - this.size,\n            size: this.size,\n            color: color,\n            vx: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            vy: utils.randInt(-this.maxSpeed, -this.minSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n        case 1:\n          // bottom edge\n          particle = new SmokeParticle({\n            x: utils.randInt(gameObj.left, gameObj.right),\n            y: gameObj.bottom,\n            size: this.size,\n            color: color,\n            vx: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            vy: utils.randInt(this.minSpeed, this.maxSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n        case 2:\n          // left edge\n          particle = new SmokeParticle({\n            x: gameObj.left - this.size,\n            y: utils.randInt(gameObj.top, gameObj.bottom),\n            size: this.size,\n            color: color,\n            vx: utils.randInt(-this.maxSpeed, -this.minSpeed),\n            vy: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n        case 3:\n          // right edge\n          particle = new SmokeParticle({\n            x: gameObj.right,\n            y: utils.randInt(gameObj.top, gameObj.bottom),\n            size: this.size,\n            color: color,\n            vx: utils.randInt(this.minSpeed, this.maxSpeed),\n            vy: utils.randInt(-this.maxSpeed, this.maxSpeed),\n            maxLife: this.maxLife\n          });\n          particle.id = this.particleIndex;\n          this.particles[this.particleIndex] = particle;\n          break;\n      }\n    },\n    update: function() {\n      // only add particles for a certain duration\n      if (Date.now() <= start + this.duration) {\n        for (var i = 0; i < 2; i++) {\n          this.addNewParticle();\n        }\n      }\n\n      for (var id in this.particles) {\n        var particle = this.particles[id];\n        particle.update();\n        if (Date.now() - particle.createdAt >= this.maxLife) {\n          delete this.particles[id];\n        }\n      }\n    },\n    draw: function(ctx, camera) {\n      ctx.save();\n      for (var id in this.particles) {\n        var particle = this.particles[id];\n        particle.draw(ctx, camera);\n      }\n      ctx.restore();\n    }\n  };\n};\n\nvar explosionParticles = function(gameObj) {\n  var size = 5;\n  var minLife = 500;\n  var maxLife = 1500;\n  var particles = [];\n  var minSpeed = 10;\n  var maxSpeed = 50;\n  var particleIndex = 0;\n  for (var i = gameObj.left; i < gameObj.right; i += size) {\n    for (var j = gameObj.top; j < gameObj.bottom; j += size) {\n      var center = gameObj.center;\n      var v = new SDK.Vector(\n        utils.randInt(-maxSpeed * 5, maxSpeed * 5),\n        utils.randInt(\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * maxSpeed * 10,\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * minSpeed * 10\n        )\n      );\n      var particle = new SDK.Particle({\n        x: i,\n        y: j,\n        size: size,\n        color: gameObj.color,\n        vx: v.x,\n        vy: v.y,\n        maxLife: utils.randInt(minLife, maxLife)\n      });\n      particles[particleIndex] = particle;\n      particleIndex++;\n      var v = new SDK.Vector(\n        utils.randInt(-maxSpeed * 5, maxSpeed * 5),\n        utils.randInt(\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * maxSpeed * 10,\n          -Math.sign(gameObj.GRAVITY_ACCELERATION) * minSpeed * 10\n        )\n      );\n      var particle = new SDK.Particle({\n        x: i,\n        y: j,\n        size: size,\n        color: gameObj.color,\n        vx: v.x,\n        vy: v.y,\n        maxLife: utils.randInt(minLife, maxLife)\n      });\n      particles[particleIndex] = particle;\n      particleIndex++;\n    }\n  }\n  return {\n    update: function() {\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.v.y += (gameObj.GRAVITY_ACCELERATION / 4) * dt;\n        particle.update();\n        if (Date.now() - particle.createdAt >= particle.maxLife) {\n          delete particles[id];\n        }\n      }\n    },\n    draw: function(ctx, camera) {\n      ctx.save();\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.draw(ctx, camera);\n      }\n      ctx.restore();\n    }\n  };\n};\n\nvar hitParticles = function(x, y, direction, color) {\n  var createdAt = Date.now();\n  var particleIndex = 0;\n  var maxCount = 10;\n  var size = 4;\n  var minLife = 300;\n  var maxLife = 500;\n  var minSpeed = 10;\n  var maxSpeed = 200;\n  var particles = {};\n  for (var i = 0; i < maxCount; i++) {\n    var v = direction\n      .getUnitVector()\n      .scale(utils.randInt(minSpeed, maxSpeed))\n      .rotateRadians((Math.random() * Math.PI) / 3 - Math.PI / 6);\n    var particle = new SDK.Particle({\n      x: x,\n      y: y,\n      size: size,\n      color: color,\n      vx: v.x,\n      vy: v.y,\n      maxLife: utils.randInt(minLife, maxLife)\n    });\n    particleIndex++;\n    particles[particleIndex] = particle;\n  }\n  return {\n    createdAt: createdAt,\n    particleIndex: particleIndex,\n    maxCount: maxCount,\n    size: size,\n    minLife: minLife,\n    maxLife: maxLife,\n    minSpeed: minSpeed,\n    maxSpeed: maxSpeed,\n    particles: particles,\n    update: function() {\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.update();\n        if (Date.now() - particle.createdAt >= particle.maxLife) {\n          delete particles[id];\n        }\n      }\n    },\n    draw: function(ctx, camera) {\n      ctx.save();\n      for (var id in particles) {\n        var particle = particles[id];\n        particle.draw(ctx, camera);\n      }\n      ctx.restore();\n    }\n  };\n};\n\nmodule.exports = {\n  sparksParticles: sparksParticles,\n  explosionParticles: explosionParticles,\n  hitParticles: hitParticles\n};\n","var Platform = (function() {\n  var MAX_SPEED = 100;\n\n  function Platform(props) {\n    SDK.Rectangle.call(this, props);\n\n    this.v = new SDK.Vector();\n    this.solid = props && props.solid !== undefined ? props.solid : true; // can collide with other solid objects\n    this.passthrough =\n      props && props.passthrough !== undefined ? props.passthrough : false; // can it be traversed upwards\n    this.touched = false; // is the player touching the platform\n    this.color = \"#5e4c4c\";\n  }\n\n  Platform.prototype = Object.create(SDK.Rectangle.prototype);\n  Platform.prototype.constructor = Platform;\n\n  Platform.prototype.update = function() {};\n\n  Platform.prototype.draw = function(ctx, camera) {\n    var lineWidth = 3;\n    ctx.save();\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    if (this.touched || !this.passthrough) {\n      ctx.strokeStyle = \"#db0000\";\n      ctx.fillStyle = this.color;\n      ctx.beginPath();\n      ctx.rect(\n        camera.applyToX(this.x + lineWidth / 2),\n        camera.applyToY(this.y + lineWidth / 2),\n        camera.applyToDistance(this.width - lineWidth),\n        camera.applyToDistance(this.height - lineWidth)\n      );\n      ctx.fill();\n      ctx.stroke();\n    } else {\n      lineWidth = 3;\n      ctx.strokeStyle = this.color;\n      ctx.lineWidth = camera.applyToDistance(lineWidth);\n      ctx.beginPath();\n      ctx.strokeRect(\n        camera.applyToX(this.x + lineWidth / 2),\n        camera.applyToY(this.y + lineWidth / 2),\n        camera.applyToDistance(this.width - lineWidth),\n        camera.applyToDistance(this.height - lineWidth)\n      );\n    }\n    ctx.restore();\n  };\n\n  return Platform;\n})();\n\nmodule.exports = Platform;\n","var Shield = require(\"./shield\");\nvar particleEmitters = require(\"./particleEmitters\");\nvar utils = require(\"../utils\");\n\nvar ABS_JUMP_SPEED = 700;\nvar MAX_FALL_SPEED = 1000;\nvar INITIAL_WIDTH = 30;\nvar INITIAL_HEIGHT = 30;\nvar CROUCH_STAND_ANIMATION_DURATION = 0.2;\n\nfunction Player(props) {\n  SDK.Rectangle.call(this, {\n    x: props.x,\n    y: props.y,\n    width: INITIAL_WIDTH,\n    height: INITIAL_HEIGHT\n  });\n\n  this.v = new SDK.Vector();\n  this.acceleration = new SDK.Vector();\n  this.COEFFICIENT_OF_RESTITUTION = 0.4;\n  this.solid = true; // can collide with other solid objects\n  this.maxHitPoints = 100;\n  this.hitPoints = this.maxHitPoints;\n  this.skills = []; // the player must harvest these\n  this.color = this.getColorFromHP();\n\n  // crouching / standing state and animations\n  this.isCrouching = false;\n  CROUCH_STAND_ANIMATION_DURATION = 0.2;\n\n  // collision direction for movement\n  this.isColliding = [0, 0]; // [horizontal, vertical]\n  this.collidableWith = []; // potential object collisions\n  this.collidingWith = [null, null]; // actual object collisions\n  this.shield = new Shield({ shielded: this });\n\n  // sounds\n  this.sounds = {\n    jump: [\n      // new SDK.Sound(\"./assets/sounds/Swoosh1.mp3\", 0.25),\n      new SDK.Sound(\"./assets/sounds/Swoosh2.mp3\", 0.1),\n      new SDK.Sound(\"./assets/sounds/Swoosh3.mp3\", 0.3)\n    ],\n    hit: [\n      new SDK.Sound(\"./assets/sounds/Hit 1.mp4\", 0.2),\n      new SDK.Sound(\"./assets/sounds/Hit 2.mp4\", 0.2)\n    ],\n    still: new SDK.Sound(\"./assets/sounds/Medium hum.mp4\", 0.15),\n    die: new SDK.Sound(\"./assets/sounds/impactsplat03.mp3\", 0.8),\n    hurt: new SDK.Sound(\"./assets/sounds/Knife Stab.mp3\", 0.2)\n  };\n\n  // should the player get stuck to the ceiling when jumping?\n  this.stickyJump = false;\n\n  // player's own gravity\n  this.GRAVITY_ACCELERATION = gameData.constants.GRAVITY_ACCELERATION;\n}\n\nPlayer.prototype = Object.create(SDK.Rectangle.prototype);\nPlayer.prototype.constructor = Player;\n\nPlayer.prototype.moveLeft = function() {\n  this.v.x = -250;\n};\n\nPlayer.prototype.moveRight = function() {\n  this.v.x = 250;\n};\n\nPlayer.prototype.crouch = function() {\n  this.isCrouching = true;\n};\n\nPlayer.prototype.stand = function() {\n  this.isCrouching = false;\n};\n\nPlayer.prototype.jump = function() {\n  if (this.isColliding[1] === Math.sign(this.GRAVITY_ACCELERATION)) {\n    // emit particles\n    this.sparks = particleEmitters.sparksParticles(this);\n\n    this.sounds.jump[utils.randInt(0, this.sounds.jump.length - 1)].replay();\n    this.isColliding[1] = 0;\n    this.v.y = -Math.sign(this.GRAVITY_ACCELERATION) * ABS_JUMP_SPEED;\n  }\n};\n\nPlayer.prototype.reverseGravity = function() {\n  this.GRAVITY_ACCELERATION = -this.GRAVITY_ACCELERATION;\n};\n\nPlayer.prototype.zeroGravity = function() {\n  if (this.GRAVITY_ACCELERATION) {\n    this.GRAVITY_ACCELERATION = 0;\n  } else {\n    this.GRAVITY_ACCELERATION = gameData.constants.GRAVITY_ACCELERATION;\n  }\n};\n\nPlayer.prototype.applyDamage = function(damage) {\n  this.sounds.hurt.replay();\n  this.hitPoints = utils.toFixedPrecision(this.hitPoints - damage);\n};\n\nPlayer.prototype.die = function(cb) {\n  this.isDead = true;\n  this.hitPoints = 0;\n  this.color = this.getColorFromHP();\n  this.sounds.still.stop();\n  this.sounds.die.play();\n  this.explosion = particleEmitters.explosionParticles(this);\n  cb && cb();\n};\n\nPlayer.prototype.getDeltaWidth = function() {\n  var deltaWidth;\n  var computedDelta =\n    (dt / CROUCH_STAND_ANIMATION_DURATION) * (INITIAL_HEIGHT - INITIAL_WIDTH); // absolute value\n  if (this.isCrouching) {\n    deltaWidth =\n      this.height - computedDelta < INITIAL_WIDTH\n        ? this.height - INITIAL_WIDTH\n        : computedDelta;\n  } else {\n    deltaWidth =\n      this.height + computedDelta > INITIAL_HEIGHT\n        ? this.height - INITIAL_HEIGHT\n        : -computedDelta;\n  }\n  return deltaWidth;\n};\n\nPlayer.prototype.updatePlayerSize = function(deltaWidth) {\n  this.width = utils.toFixedPrecision(this.width + deltaWidth, 3);\n  this.height = utils.toFixedPrecision(this.height - deltaWidth, 3);\n  this.x = utils.toFixedPrecision(this.x - deltaWidth / 2, 3);\n  this.y =\n    this.GRAVITY_ACCELERATION < 0\n      ? utils.toFixedPrecision(this.y, 3)\n      : utils.toFixedPrecision(this.y + deltaWidth, 3);\n};\n\nPlayer.prototype.applyGravity = function() {\n  // apply gravity if player is free falling\n  this.acceleration.y = this.GRAVITY_ACCELERATION;\n\n  // compute new speed based on acceleration and time ellapsed\n  this.v.y += this.acceleration.y * dt;\n  this.v.y =\n    Math.abs(this.v.y) > MAX_FALL_SPEED\n      ? Math.sign(this.v.y) * MAX_FALL_SPEED\n      : this.v.y;\n};\n\nPlayer.prototype.update = function() {\n  if (this.isDead) {\n    this.explosion.update();\n    return;\n  } else {\n    this.sparks && this.sparks.update();\n  }\n\n  var dx = this.v.x * dt,\n    dy = this.v.y * dt;\n\n  this.updatePlayerSize(this.getDeltaWidth());\n\n  // apply natural position increments if no collision detected\n  if (!this.isColliding[1]) {\n    this.y = utils.toFixedPrecision(this.y + dy, 4);\n  }\n  if (!this.isColliding[0]) {\n    this.x = utils.toFixedPrecision(this.x + dx, 4);\n  }\n};\n\nPlayer.prototype.getHitPointsRatio = function() {\n  return this.hitPoints / this.maxHitPoints;\n};\n\nPlayer.prototype.getColorFromHP = function() {\n  var hitPointsRatio = this.getHitPointsRatio();\n  var color = \"hsl(\" + hitPointsRatio * 120 + \", 100%, 50%)\";\n  return color;\n};\n\nPlayer.prototype.draw = function(ctx, camera) {\n  // draw particles\n  this.color = this.getColorFromHP();\n  this.isDead && this.explosion.draw(ctx, camera);\n  !this.isDead && this.sparks && this.sparks.draw(ctx, camera);\n\n  // draw player\n  if (!this.isDead) {\n    var center = this.center;\n    var lineWidth = 5;\n\n    ctx.save();\n    ctx.strokeStyle = this.color;\n    ctx.fillStyle = this.color;\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    ctx.fillRect(\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.width),\n      camera.applyToDistance(this.height)\n    );\n\n    // draw mask\n    ctx.fillStyle = \"black\";\n    ctx.fillRect(\n      camera.applyToX(this.left),\n      camera.applyToY(this.top + 10),\n      camera.applyToDistance(this.width),\n      camera.applyToDistance(10)\n    );\n\n    // draw eyes\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(center.x - 10), camera.applyToY(this.top + 12));\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x - 4),\n      camera.applyToY(this.top + 14),\n      camera.applyToX(center.x - 4),\n      camera.applyToY(this.top + 16)\n    );\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x - 10),\n      camera.applyToY(this.top + 16),\n      camera.applyToX(center.x - 10),\n      camera.applyToY(this.top + 14)\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(center.x + 10), camera.applyToY(this.top + 12));\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x + 4),\n      camera.applyToY(this.top + 14),\n      camera.applyToX(center.x + 4),\n      camera.applyToY(this.top + 16)\n    );\n    ctx.quadraticCurveTo(\n      camera.applyToX(center.x + 10),\n      camera.applyToY(this.top + 16),\n      camera.applyToX(center.x + 10),\n      camera.applyToY(this.top + 14)\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n\n    // draw shield\n    if (this.shield.isOpen || this.shield.isAnimating) {\n      this.shield.draw(ctx, camera);\n    }\n  }\n};\n\nmodule.exports = Player;\n","var Shield = (function() {\n  var MIN_SIZE = 0;\n  var MAX_SIZE = 40;\n\n  function Shield(props) {\n    this.shielded = props.shielded || null; // object benefitting from the shield\n    this.r = MIN_SIZE;\n    this.isOpen = false;\n    this.isAnimating = false;\n\n    // timings\n    this.openingDuration = 0.3;\n    this.closingDuration = 0.6;\n\n    // hit points\n    this.hitPoints = 200;\n\n    // sounds\n    this.sounds = {\n      open: new SDK.Sound(\"./assets/sounds/Open.mp3\", 0.1),\n      close: new SDK.Sound(\"./assets/sounds/Close.mp3\", 0.2)\n    };\n  }\n\n  Shield.prototype.getBoundingRect = function() {\n    var shielded = this.shielded;\n    return new SDK.Rectangle({\n      x: shielded.left - this.r,\n      y: shielded.top - this.r,\n      width: shielded.width + this.r * 2,\n      height: shielded.height + this.r * 2\n    });\n  };\n\n  Shield.prototype.open = function() {\n    this.sounds.close.stop();\n    this.sounds.open.play();\n    this.isOpen = true;\n    this.isAnimating = true;\n  };\n\n  Shield.prototype.close = function() {\n    this.sounds.open.stop();\n    this.sounds.close.play();\n    this.isOpen = false;\n    this.isAnimating = true;\n  };\n\n  Shield.prototype.update = function() {\n    var dr;\n    if (this.isOpen) {\n      dr = ((MAX_SIZE - MIN_SIZE) / this.openingDuration) * dt;\n      // shield opening\n      if (this.r + dr < MAX_SIZE) {\n        this.r += dr;\n      } else {\n        this.r = MAX_SIZE;\n        this.isAnimating = false;\n      }\n    } else {\n      dr = ((MAX_SIZE - MIN_SIZE) / this.closingDuration) * dt;\n      // shield closing\n      if (this.r - dr > MIN_SIZE) {\n        this.r -= dr;\n      } else {\n        this.r = MIN_SIZE;\n        this.isAnimating = false;\n      }\n    }\n  };\n\n  Shield.prototype.hasCollisionWithLaser = function(laser) {\n    var boundingRect = this.getBoundingRect();\n    var collision = SDK.physics.collision;\n    var shielded = this.shielded;\n    var r = this.r;\n\n    // return if the two shapes bounding rectangles don't collide\n    if (\n      !collision.RectangleWithRectangle(boundingRect, laser.getBoundingRect())\n    ) {\n      return false;\n    }\n\n    // the shield can be decomposed in 6 shapes\n    c1 = new SDK.Circle({ x: shielded.left, y: shielded.top, r: r });\n    c2 = new SDK.Circle({ x: shielded.right, y: shielded.top, r: r });\n    c3 = new SDK.Circle({ x: shielded.right, y: shielded.bottom, r: r });\n    c4 = new SDK.Circle({ x: shielded.left, y: shielded.bottom, r: r });\n    r1 = new SDK.Rectangle({\n      x: shielded.left - r,\n      y: shielded.top,\n      width: shielded.width + 2 * r,\n      height: shielded.height\n    });\n    r2 = new SDK.Rectangle({\n      x: shielded.left,\n      y: shielded.top - r,\n      width: shielded.width,\n      height: shielded.height + 2 * r\n    });\n\n    return (\n      c1.containsPoint(laser.A.x, laser.A.y) ||\n      c1.containsPoint(laser.B.x, laser.B.y) ||\n      c2.containsPoint(laser.A.x, laser.A.y) ||\n      c2.containsPoint(laser.B.x, laser.B.y) ||\n      c3.containsPoint(laser.A.x, laser.A.y) ||\n      c3.containsPoint(laser.B.x, laser.B.y) ||\n      c4.containsPoint(laser.A.x, laser.A.y) ||\n      c4.containsPoint(laser.B.x, laser.B.y) ||\n      r1.contains(laser.A.x, laser.A.y) ||\n      r1.contains(laser.B.x, laser.B.y) ||\n      r2.contains(laser.A.x, laser.A.y) ||\n      r2.contains(laser.B.x, laser.B.y)\n    );\n  };\n\n  Shield.prototype.draw = function(ctx, camera) {\n    var left = this.shielded.x - this.r;\n    var top = this.shielded.y - this.r;\n    var right = left + 2 * this.r + this.shielded.width;\n    var bottom = top + 2 * this.r + this.shielded.height;\n    var lineWidth = 2;\n\n    ctx.save();\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.4)\";\n    ctx.strokeStyle = this.shielded.color;\n    ctx.lineWidth = camera.applyToDistance(lineWidth);\n    ctx.beginPath();\n    ctx.moveTo(camera.applyToX(left), camera.applyToY(top + this.r));\n    ctx.arcTo(\n      camera.applyToX(left),\n      camera.applyToY(top),\n      camera.applyToX(left + this.r),\n      camera.applyToY(top),\n      camera.applyToDistance(this.r)\n    );\n    ctx.lineTo(camera.applyToX(right - this.r), camera.applyToY(top));\n    ctx.arcTo(\n      camera.applyToX(right),\n      camera.applyToY(top),\n      camera.applyToX(right),\n      camera.applyToY(top + this.r),\n      camera.applyToDistance(this.r)\n    );\n    ctx.lineTo(camera.applyToX(right), camera.applyToY(bottom - this.r));\n    ctx.arcTo(\n      camera.applyToX(right),\n      camera.applyToY(bottom),\n      camera.applyToX(right - this.r),\n      camera.applyToY(bottom),\n      camera.applyToDistance(this.r)\n    );\n    ctx.lineTo(camera.applyToX(left + this.r), camera.applyToY(bottom));\n    ctx.arcTo(\n      camera.applyToX(left),\n      camera.applyToY(bottom),\n      camera.applyToX(left),\n      camera.applyToY(bottom - this.r),\n      camera.applyToDistance(this.r)\n    );\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  };\n\n  return Shield;\n})();\n\nmodule.exports = Shield;\n","var Skill = (function() {\n  function Skill(props) {\n    SDK.Rectangle.call(this, props);\n\n    this.v = new SDK.Vector();\n    this.solid = false;\n    this.image = new Image();\n    this.image.src = props.src;\n  }\n\n  Skill.prototype = Object.create(SDK.Rectangle.prototype);\n  Skill.prototype.constructor = Skill;\n\n  Skill.prototype.update = function() {};\n\n  Skill.prototype.draw = function(ctx, camera) {\n    ctx.save();\n    ctx.drawImage(\n      this.image,\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.width),\n      camera.applyToDistance(this.height)\n    );\n    ctx.restore();\n  };\n\n  return Skill;\n})();\n\nmodule.exports = Skill;\n","function SkillBar(props) {\n  this.player = props.player;\n  this.skills = props.skills;\n}\n\nSkillBar.prototype.draw = function(ctx) {\n  var acquiredSkillsCount = this.player.skills.length;\n  var totalSkillsCount = acquiredSkillsCount + this.skills.length;\n  ctx.save();\n  ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\n  ctx.fillRect(\n    60,\n    100,\n    100,\n    100 + ((acquiredSkillsCount + (acquiredSkillsCount % 2)) / 2) * 45\n  );\n  ctx.fillStyle = \"white\";\n  ctx.textAlign = \"center\";\n  ctx.font = \"16px arial\";\n  ctx.fillText(\"Skills\", 110, 130);\n  ctx.fillText(acquiredSkillsCount + \" / \" + totalSkillsCount, 110, 160);\n  this.player.skills.forEach(function(skill, index) {\n    ctx.drawImage(\n      skill.image,\n      70 + (index % 2) * 45,\n      200 + ((index - (index % 2)) / 2) * 45,\n      30,\n      30\n    );\n  }, this);\n  ctx.restore();\n};\n\nmodule.exports = SkillBar;\n","var Skill = require(\"./skill\");\n\nfunction SkillHtml(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/html-5-icon.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillHtml.prototype = Object.create(Skill.prototype);\nSkillHtml.prototype.constructor = SkillHtml;\n\nfunction SkillCss(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/css-3-icon.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillCss.prototype = Object.create(Skill.prototype);\nSkillCss.prototype.constructor = SkillCss;\n\nfunction SkillSass(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/sass-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillSass.prototype = Object.create(Skill.prototype);\nSkillSass.prototype.constructor = SkillSass;\n\nfunction SkillBootstrap(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/bootstrap-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillBootstrap.prototype = Object.create(Skill.prototype);\nSkillBootstrap.prototype.constructor = SkillBootstrap;\n\nfunction SkillJquery(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/jquery-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillJquery.prototype = Object.create(Skill.prototype);\nSkillJquery.prototype.constructor = SkillJquery;\n\nfunction SkillReact(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/react-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillReact.prototype = Object.create(Skill.prototype);\nSkillReact.prototype.constructor = SkillReact;\n\nfunction SkillAngular(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/angular-logo.svg\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillAngular.prototype = Object.create(Skill.prototype);\nSkillAngular.prototype.constructor = SkillAngular;\n\nfunction SkillNode(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/nodejs-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillNode.prototype = Object.create(Skill.prototype);\nSkillNode.prototype.constructor = SkillNode;\n\nfunction SkillMeteor(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/meteor-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillMeteor.prototype = Object.create(Skill.prototype);\nSkillMeteor.prototype.constructor = SkillMeteor;\n\nfunction SkillMongo(props) {\n  Skill.call(\n    this,\n    Object.assign({}, props, {\n      src: \"./assets/images/mongodb-logo.png\",\n      width: props.width || 50,\n      height: props.height || 50\n    })\n  );\n}\nSkillMongo.prototype = Object.create(Skill.prototype);\nSkillMongo.prototype.constructor = SkillMongo;\n\nmodule.exports = {\n  SkillAngular: SkillAngular,\n  SkillBootstrap: SkillBootstrap,\n  SkillCss: SkillCss,\n  SkillHtml: SkillHtml,\n  SkillJquery: SkillJquery,\n  SkillMeteor: SkillMeteor,\n  SkillMongo: SkillMongo,\n  SkillNode: SkillNode,\n  SkillReact: SkillReact,\n  SkillSass: SkillSass\n};\n","var SmokeParticle = (function() {\n  function SmokeParticle(props) {\n    SDK.Particle.call(this, props);\n\n    this.image = new Image();\n    this.image.src = \"./assets/images/smoke2.png\";\n  }\n\n  SmokeParticle.prototype = Object.create(SDK.Particle.prototype);\n  SmokeParticle.prototype.constructor = SmokeParticle;\n\n  SmokeParticle.prototype.draw = function(ctx, camera) {\n    ctx.globalAlpha = Math.max(\n      0,\n      1 - (Date.now() - this.createdAt) / this.maxLife\n    );\n    ctx.save();\n    ctx.drawImage(\n      this.image,\n      camera.applyToX(this.x),\n      camera.applyToY(this.y),\n      camera.applyToDistance(this.size),\n      camera.applyToDistance(this.size)\n    );\n    ctx.restore();\n  };\n  return SmokeParticle;\n})();\n\nmodule.exports = SmokeParticle;\n","var utils = require(\"./utils\");\nvar Game = require(\"./game/game\");\n\nwindow.addEventListener(\"DOMContentLoaded\", function() {\n  // go fullscreen\n  document.documentElement.requestFullscreen =\n    document.documentElement.requestFullscreen ||\n    document.documentElement.webkitRequestFullScreen ||\n    document.documentElement.mozRequestFullScreen ||\n    document.documentElement.msRequestFullscreen;\n\n  var gameContainer = document.getElementById(\"game-container\");\n  var canvases = document.getElementsByTagName(\"canvas\");\n  var startGameButton = document.getElementById(\"start-game\");\n  var gameIntroEl = document.getElementById(\"game-intro\");\n\n  function resize() {\n    for (var i = 0; i < canvases.length; i++) {\n      var canvas = canvases[i];\n      var canvasWidth = parseFloat(getComputedStyle(canvas).width);\n      var canvasHeight = parseFloat(getComputedStyle(canvas).height);\n      // change resolution\n      canvas.setAttribute(\"width\", canvasWidth);\n      canvas.setAttribute(\"height\", canvasHeight);\n    }\n  }\n\n  startGameButton.addEventListener(\"click\", function(e) {\n    e.preventDefault ? e.preventDefault() : (e.returnValue = false);\n\n    // go fullscreen\n    document.documentElement.requestFullscreen &&\n      document.documentElement.requestFullscreen();\n\n    // instantiate game\n    utils.show(gameContainer);\n    utils.show(gameIntroEl);\n    window.game = new Game({\n      shouldDisplayDebug: true,\n      shouldDisplayRulers: true\n    });\n\n    game.start();\n  });\n  window.addEventListener(\"blur\", function(e) {\n    if (window.hasOwnProperty(\"game\")) {\n      game.pause();\n    }\n  });\n  window.addEventListener(\"resize\", resize);\n  resize();\n\n  // update debug info\n  var debugEl = document.querySelector(\".debug\");\n  if (window.hasOwnProperty(\"game\")) {\n    setInterval(function() {\n      game.updateDebugInfo();\n    }, 50);\n  }\n});\n","module.exports = {\n  toFixedPrecision: function(number, precision) {\n    return +number.toFixed(precision || 0);\n  },\n\n  noop: function() {},\n\n  randInt: function(start, end) {\n    return Math.floor(Math.random() * (end - start + 1) + start);\n  },\n\n  lerp: function(v0, v1, t) {\n    return (1 - t) * v0 + t * v1;\n  },\n\n  show: function(el) {\n    el.classList.remove(\"hidden\");\n  },\n\n  hide: function(el) {\n    el.classList.add(\"hidden\");\n  },\n\n  incrementID: (function() {\n    var id = -1;\n    return function() {\n      id = id + 1;\n      return id;\n    };\n  })(),\n\n  h: function(type, props, children) {\n    var el = document.createElement(type);\n    var nodes, node;\n    for (var key in props) {\n      el.setAttribute(key, props[key]);\n    }\n    if (Array.isArray(children)) {\n      nodes = children;\n    } else {\n      nodes = [children];\n    }\n    for (var i = 0; i < nodes.length; i++) {\n      if (typeof nodes[i] === \"string\") {\n        node = document.createTextNode(nodes[i]);\n      } else {\n        node = nodes[i];\n      }\n      el.appendChild(node);\n    }\n    return el;\n  },\n\n  /**\n   * Build DOM from virtual DOM tree.\n   * @param {Object} dom\n   */\n  render: function(vdom) {\n    return (function renderNode(vdom) {\n      if (vdom.split) return document.createTextNode(vdom);\n\n      const element = document.createElement(vdom.type);\n      const props = vdom.props || {};\n\n      Object.keys(props).forEach(function(key) {\n        // treat events separately\n        if (typeof props[key] !== \"function\") {\n          element.setAttribute(key, props[key]);\n        }\n\n        // events\n        if (typeof props[key] === \"function\") {\n          var eventType = key.substring(2); // remove the 'on' part\n          element.addEventListener(eventType, props[key]);\n        }\n      });\n\n      (vdom.children || []).forEach(function(vNode) {\n        return element.appendChild(renderNode(vNode));\n      });\n      return element;\n    })(vdom);\n  },\n\n  h: function() {\n    var vNode = {};\n    var type = arguments[0];\n    var props = arguments[1];\n    var children = Array.prototype.slice.call(arguments, 2);\n\n    vNode.type = type;\n    vNode.props = props;\n\n    if (children.length) {\n      vNode.children = children.reduce((acc, item) => {\n        return Array.isArray(item) ? [...acc, ...item] : [...acc, item];\n      }, []);\n    } else {\n      vNode.children = null;\n    }\n\n    return vNode;\n  },\n\n  emptyElement(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n};\n"],"sourceRoot":""}